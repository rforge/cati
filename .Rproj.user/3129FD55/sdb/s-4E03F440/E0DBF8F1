{
    "contents" : "\\documentclass[12pt]{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage{graphicx}\n\\usepackage{color}\n\\definecolor{blue1}{RGB}{0,102,204}\n\\usepackage[colorlinks=true,linkcolor=blue,citecolor=blue,urlcolor=blue]{hyperref}\n\\usepackage{array}\n\\usepackage[english]{babel}\n\\usepackage{amsfonts}\n\\usepackage{url}\n\\usepackage{bm}\n\\usepackage[margin=2.5cm]{geometry}\n\\usepackage[affil-it]{authblk}\n\n\\newcommand{\\R}{\\mathbb{R}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\m}[1]{\\mathbf{#1}}  % e.g  W(\\m{X}) met en gras le X\n\\newcommand{\\rcmd}[1]{\\textcolor{red}{\\texttt{#1}}}\n\\newcommand{\\code}[1]{{{\\tt #1}}}\n\n\n\\title{Illustrating package cati (Community Assembly by Traits: Individuals and beyond) using Darwin finches data}\n\\author{Adrien Taudiere\n  \\thanks{\\texttt{adrien.taudiere@cefe.cnrs.fr}}\n}\n\\affil{{\\footnotesize EPHE \\\\CEFE - Centre d'Ecologie Fonctionnelle et Evolutive}}\n\n\\date{\\today}\n\n\\sloppy\n\\hyphenpenalty 10000\n\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\\begin{document}\n\n\\selectlanguage{english}\n\n <<include=FALSE>>=\nopts_chunk$set(fig.keep='high', dev='pdf', fig.width=7, fig.height=7, tidy=FALSE, warning=FALSE, fig.show=\"asis\")\n@\n\n\n\\color{black}\n\n%results='hide'\n%echo=F\n%eval=F\n\n\n\\maketitle\n\n\\begin{abstract}\n  This vignette present the cati package (Community Assembly by Traits: Individuals and beyond) using Darwin finches data.\n\\end{abstract}\n\n\n\\newpage\n\\tableofcontents\n\n\n\\newpage\n\n\n%%%%%%%%%%%%%%%%\n\\section{Introduction}\n%%%%%%%%%%%%%%%%\n\n\n\n%%%%%%%%%%%%%%%%\n\\section{Installing the package cati}\n%%%%%%%%%%%%%%%%\n\n<<results='hide'>>= \ninstall.packages(\"C:/Users/taudiere/Dropbox/cati_0.4.zip\", repos=NULL)\n#install.packages(\"cati\", repos=\"http://R-Forge.R-project.org\")\n@\n\n<<results='hide', message=FALSE, warning=FALSE>>= \nlibrary(cati, warn.conflicts = FALSE)\ndata(finch.ind)\n\noldpar<-par(no.readonly = TRUE)\n@\n\n\n\n\\newpage\n\n\n%%%%%%%%%%%%%%%%\n\\section{Description of distribution}\n%%%%%%%%%%%%%%%%\n\n\\subsection{Plot the density of traits}\n\nPlot the distribution of traits values for populations, species, sites and regional scales. First, let try the distribution for all populations of Darwin finches.\n\n<<dev='pdf'>>=\npar(mfrow=c(4,4), cex=0.5)\nplot_dens(traits.finch, sp.finch,\n          ind.plot.finch, ylim.cex=3, plot.ask=F, \n          multipanel=F, leg=F)\n@\n\n\\newpage\n\nThen we can inverse the second and the third arguments to plot the distribution for all finches species. \n<<dev='pdf'>>=\npar(mfrow=c(5,5), cex=0.5)\nplot_dens(traits.finch, ind.plot.finch, \n          sp.finch, ylim.cex=8, plot.ask=F, multipanel=F, leg=F)\n@\n\n<<dev='pdf'>>=\nplot_dens(traits.finch, rep(\"region\", times=dim(traits.finch)[1]), \n          sp.finch, ylim.cex=6, plot.ask=F, leg=F)\n@\n\n<<dev='pdf'>>=\nplot_dens(traits.finch, rep(\"toutes_sp\", times=dim(traits.finch)[1]),\n          ind.plot.finch, ylim.cex=3, plot.ask=F)\n@\n\n\n\n\\newpage\n\n%%%%%%%%%%%%%%%%\n\\section{Decomposition of variances}\n%%%%%%%%%%%%%%%%\n\n\\subsection{Decomposition of within/among species variances}\n\n<<>>=\ncomm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))\ncomm.sp<-table(sp.finch, ind.plot.finch)\nclass(comm.sp)<-\"matrix\"\n\ntraits.finch.sp<-apply( apply(traits.finch, 2, scale ), 2, \n                        function(x) tapply(x, sp.finch, mean, na.rm=T))\n\nmat.dist<-as.matrix(dist(traits.finch.sp))^2\n\nres.rao<-RaoRel(sample=as.matrix(comm.sp), \n                dfunc=mat.dist, dphyl=NULL, \n                weight=F, Jost=F, structure=NULL)\n\nwitRao<-res.rao$FD$Mean_Alpha  #overall within species variance\nbetRao<-res.rao$FD$Beta_add    #between species variance\ntotRao<-res.rao$FD$Gamma       #the total variance\n\nwitRao+betRao\ntotRao\n@\n\nNow let's take the abundance to calculate Rao diversity.\n\n<<>>=\nres.rao.w<-RaoRel(sample=as.matrix(comm.sp), \n                  dfunc=mat.dist, dphyl=NULL, \n                  weight=T, Jost=F, structure=NULL)\n\nwitRao.w<-res.rao.w$FD$Mean_Alpha  #overall within species variance\nbetRao.w<-res.rao.w$FD$Beta_add    #between species variance\ntotRao.w<-res.rao.w$FD$Gamma       #the total variance\n\nwitRao.w\nbetRao.w\n@\n\nPlot the results\n\n<<dev='pdf', fig.width=3.5, fig.height=3.5, fig.align='center'>>=\nbarplot(cbind(c(witRao.w, betRao.w), c(witRao, betRao)), \n        names.arg =c(\"abundance\" ,\"presence\"), \n        legend.text=c(\"within species\", \"between species\"), \n        ylab=\"Rao\", ylim=c(0,10))\n@\n\nWe can do this analysis for each trait separately. We need to replace (or exclude) NA values. For this example, we use the package mice to complete the data.\n\n<<results='hide'>>=\ncomm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))\n\nrequire(mice)\ntraits=traits.finch\nmice<-mice(traits.finch)\ntraits.finch.mice<-complete(mice)\n@\n\n\n<<>>=\ntraits.finch.mice.sp<-apply(apply(traits.finch.mice, 2, scale ), 2, \n                            function(x) tapply(x, sp.finch, mean, na.rm=T))\n\ntrait.rao.w<-list()\nwitRao.w.bytrait<-c()\nbetRao.w.bytrait<-c()\nfor(t in 1 : 4){\n  trait.rao.w[[t]]<-RaoRel(sample=as.matrix(comm.sp), \n                           dfunc=dist(traits.finch.mice.sp[,t]), \n                           dphyl=NULL, weight=T, Jost=F, structure=NULL)\n  witRao.w.bytrait<-c(witRao.w.bytrait, trait.rao.w[[t]]$FD$Mean_Alpha)\n  betRao.w.bytrait<-c(betRao.w.bytrait, trait.rao.w[[t]]$FD$Beta_add)\n}\n\n@\n\n\nPlot the results by traits.\n\n<<dev='pdf'>>=\nbarplot(t(cbind( witRao.w.bytrait, betRao.w.bytrait)), \n        names.arg = colnames(traits.finch),\n        legend.text=c(\"within species\", \"between species\"), \n        ylab=\"Rao\", ylim=c(0,1.5))\n@\n\n\n\\subsection{Decomposition of within/among species variances}\n\n<<dev='pdf', fig.width=3.5, fig.height=3.5, fig.align='center'>>=\nres.decomp<-decomp_whithin(traits=traits.finch, sp=sp.finch, \n                           ind.plot=ind.plot.finch, print=FALSE)\n\nbarplot.decomp_whithin(res.decomp)\n\npar(mfrow=c(2,2))\nbarplot.decomp_whithin(res.decomp, resume=F)\n@\n\n\n\\newpage\n\n\\subsection{Decomposition of variances using nested factors}\n\n<<results='hide'>>=\nvec<- seq(1,length(sp.finch)*2, by=2)\ngenus<-as.vector(unlist(strsplit(as.vector(sp.finch),\"_\"))[vec])\nfact<-cbind(sites=as.factor(as.vector(ind.plot.finch)), \n            species=as.factor(as.vector(sp.finch)),\n            genus=as.factor(genus))\n \nres.partvar.finch<-partvar(traits=traits.finch, factors=fact)\n \nres.partvar.finch\n@\n\n\n<<dev='pdf', fig.width=3.5, fig.height=3.5, fig.align='center'>>=\npar(mfrow=c(2,2), mai=c(0.2,0.2,0.2,0.2))\npie_partvar(res.partvar.finch, col=c(\"red\", \"green\", \"blue\", \"purple\"))\npar(oldpar)\n\nbar_partvar(res.partvar.finch, col=c(\"red\", \"green\", \"blue\", \"purple\"),\n            leg=TRUE)\n@\n\n\n\n\\newpage\n\n\\subsection{Plot the relation between populational trait means and sites traits means.}\n\n<<dev='pdf'>>=\nplot_sp_pop(traits.finch, ind.plot.finch, sp.finch, silent=TRUE)\n@\n\nIf we change the value of the threshold (alpha=10\\% instead of 5\\% and the minimum individual to represent singificativity fixed to 3 instead of 10 by default) we can see some significant relationships.\n\n\\newpage\n\n<<dev='pdf'>>=\nplot_sp_pop(traits.finch, ind.plot.finch, sp.finch, \n           p.val=0.1,  min.ind.signif=3, silent=TRUE)\n@\n\n\\newpage\n\nFor a more simple figure, add the option resume=TRUE. Again if we change the value of the threshold (alpha=10\\% instead of 5\\% and the minimum individual to represent singificativity fixed to 3 instead of 10 by default) we can see some significant relationships.\n\n<<dev='pdf'>>=\nplot_sp_pop(traits.finch, ind.plot.finch, sp.finch,\n           silent=TRUE, resume=TRUE, col.pop=\"grey\")\nplot_sp_pop(traits.finch, ind.plot.finch, sp.finch, \n           silent=TRUE, resume=TRUE, col.pop=\"grey\", col.sp=\"black\")\nplot_sp_pop(traits.finch, ind.plot.finch, sp.finch, \n           silent=TRUE, resume=TRUE, col.pop=\"grey\", col.sp=\"black\", \n           p.val=0.1,  min.ind.signif=3)\n@\n\n\n\n\\newpage\n\n%%%%%%%%%%%%%%%%\n\\section{Test of community assembly}\n%%%%%%%%%%%%%%%%\n\n\\subsection{Ratio of variances: T-statistics}\n\n<<>>=\nres.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch,\n                  nperm=9, print=FALSE)\nattributes(res.finch)\n@\n\nTstats class is associated to S3 methods plot, barplot and summary\n\n<<dev='pdf', fig.width=6, fig.height=6, fig.align='center'>>=\nplot(res.finch)\n@\n<<dev='pdf', fig.width=6, fig.height=6, fig.align='center'>>=\npar(mfrow=c(2,2))\nplot(res.finch, type=\"color_cond\")\nplot(res.finch, type=\"simple\")\nplot(res.finch, type=\"simple_sd\")\nplot(res.finch, type=\"barplot\")\npar(oldpar)\n@\n\n\\newpage\n\n<<dev='pdf', fig.width=6, fig.height=6, fig.align='center'>>=\nbarplot(res.finch, ylim=c(0,3.5))\n@\n\n<<dev='pdf'>>=\nattributes(summary(res.finch))\nhead(summary(res.finch)$p.value, 10)\n@\n\n\\newpage\n\nWe can also see T-statistics correlations and theirs correlation with others variables (e.g. a gradient variable, or the species richness).\n\n<<dev='pdf'>>=\npar(mfrow=c(2,3))\nplot_cor.Tstats(res.finch, plot.ask=FALSE, multipanel=F)\n@\n\nHere we plot T-statistics in function of species richness by sites.\n\n<<dev='pdf'>>=\npar(mfrow=c(2,2))\nspecies.richness<-table(ind.plot.finch)\nplot_ses.var(as.listofindex(list(res.finch)), species.richness, \n             multipanel=F)\n@\n\nSame plot with \\code(resume=TRUE).\n\n<<dev='pdf'>>=\npar(mfrow=c(2,2))\nplot_ses.var(as.listofindex(list(res.finch)), species.richness, \n             resume=T, multipanel=F)\npar(mfrow=c(1,1))\n@\n\n\n\\newpage\n\\subsection{Others univariates index}\n\nThe function \\code(com.index) allow to choose your own function (like mean, range, variance...) to calculate customize index.\n\n<<>>=\nfunct<-c(\"mean(x, na.rm=T)\", \"kurtosis(x, na.rm=T)\",\n         \"max(x, na.rm=T) - min(x, na.rm=T)\", \"CVNND(x)\"  )\nres.finch.sp_mn2<-com.index(traits=traits.finch, index=funct, sp=sp.finch, \n                            nullmodels=c(2,2,2,2), ind.plot=ind.plot.finch,\n                            nperm=9, print=FALSE)\nres.finch.sp_mn3<-com.index(traits=traits.finch, index=funct, sp=sp.finch,\n                            nullmodels=c(3,3,3,3), ind.plot=ind.plot.finch, \n                            nperm=9, print=FALSE)\n@\n\n\\newpage\nWe can represent Standardized Effect Size (ses) using the function \\code(plot(as.listofindex(list1, list2, list3)))\n<<dev='pdf'>>=\nlist.ind2<-list(res.finch.sp_mn2, res.finch.sp_mn3)\nindex.list2<-as.listofindex(list.ind2)\n\nplot(index.list2, type=\"bytraits\")\n\nplot(index.list2)\n@\n\n\\newpage\n\nThis allows to calcul index by sites for example using \\code(\"tapply(x, sites, mean)\").\n\n<<>>=\nfunct<-c(\"tapply(x, ind.plot.finch, function(x) mean(x, na.rm=T))\",\n         \"tapply(x, ind.plot.finch, function(x) kurtosis(x, na.rm=T))\",\n         \"tapply(x, ind.plot.finch, function(x) max(x, na.rm=T) - min(x, na.rm=T))\", \n         \"tapply(x, ind.plot.finch, function(x) CVNND(x))\"  )\n\n##Null model 1 is trivial for this function because randomisation is whithin community only\nres.finch.ind_mn1<-com.index(traits=traits.finch, index=funct, sp=sp.finch,\n                             nullmodels=c(1,1,1,1), ind.plot=ind.plot.finch,\n                             nperm=9, print=FALSE)\nres.finch.ind_mn2<-com.index(traits=traits.finch, index=funct, sp=sp.finch, \n                             nullmodels=c(2,2,2,2), ind.plot=ind.plot.finch,\n                             nperm=9, print=FALSE)\n@\n\n\nWe can calcul index with or without intraspecific variance.\n\n<<>>=\n#Calcul of means by population (name_sp_site is a name of a population) like in the function com.index and determine the site for each population (sites_bypop)\nname_sp_sites=paste(sp.finch, ind.plot.finch,sep=\"_\")\ntraits.by.pop<-apply(traits.finch, 2 , \n                     function (x) tapply(x, name_sp_sites, mean , na.rm=T))\n\nsites_bypop<-lapply(strsplit(paste(rownames(traits.by.pop), sep=\"_\"), split=\"_\"), \n                    function(x) x[3])\n\nfunct.whithoutIV<-c(\"tapply(x, unlist(sites_bypop), function(x) mean(x, na.rm=T))\",\n                    \"tapply(x, unlist(sites_bypop), function(x) kurtosis(x, na.rm=T))\",\n                    \"tapply(x, unlist(sites_bypop), function(x) max(x, na.rm=T) - min(x, na.rm=T))\", \n                    \"tapply(x, unlist(sites_bypop), function(x) CVNND(x))\")\n\n\nfunct.whithIV<-c(\"tapply(x, ind.plot.finch, function(x) mean(x, na.rm=T))\",\n                 \"tapply(x, ind.plot.finch, function(x) kurtosis(x, na.rm=T))\",\n                 \"tapply(x, ind.plot.finch, function(x) max(x, na.rm=T) - min(x, na.rm=T))\", \n                 \"tapply(x, ind.plot.finch, function(x) CVNND(x))\")\n\n\nres.finch.whithIV<-com.index(traits=traits.finch, index=funct.whithIV, sp=sp.finch,\n                             nullmodels=c(2,2,2,2), ind.plot=ind.plot.finch, \n                             nperm=9, print=FALSE)\n\nres.finch.whithoutIV<-com.index(traits=traits.finch, index=funct.whithoutIV, sp=sp.finch, \n                             nullmodels=c(3,3,3,3), ind.plot=ind.plot.finch,\n                             nperm=9, print=FALSE)\n@\n\n\n\\newpage\n\nWe can also represent T-statistics and custom index thanks to the \\code(plot.listofindex) function.\n<<dev='pdf'>>=\nlist.ind<-list(res.finch.whithIV, res.finch.whithoutIV ,res.finch)\nnamesindex.i.l1=c(\"mean\", \"kurtosis\", \"range\", \"CVNND\",\n                  \"mean.pop\", \"kurtosis.pop\", \"range.pop\", \"CVNND.pop\", \n                  \"T_IP.IC\", \"T_IC.IR\", \"T_PC.PR\")\n\n i.l1<-as.listofindex(list.ind, namesindex=namesindex.i.l1)\n                                 \n class(i.l1)\n\npar(mfrow=c(2,3))\nplot(i.l1,type=\"bytraits\", bysites=TRUE)\n\npar(mfrow=c(2,2))\nplot(i.l1,type=\"bytraits\")\npar(mfrow=c(1,1))\n@\n\n\n<<dev='pdf'>>=\nplot(i.l1,type=\"simple\")\nplot(i.l1,type=\"simple_range\")\nplot(i.l1,type=\"normal\")\nplot(i.l1,type=\"barplot\")\n@\n\n\n\n\\newpage\n\n\\subsection{Multivariates index}\n\nFor most multivariate functions we need to replace (or exclude) NA values. For this example, we use the package mice to complete the data.\n\n<<results='hide', eval=FALSE>>=\ncomm<-t(table(ind.plot.finch,1:length(ind.plot.finch)))\n\nrequire(mice)\ntraits=traits.finch\nmice<-mice(traits.finch)\ntraits.finch.mice<-complete(mice)\n@\n\nA simple example to illustrate the concept of the function \\code(com.index.multi) \n\n<<>>=\nnames_sp_ind_plot<-as.factor(paste(sp.finch, ind.plot.finch, sep=\"_\")) \nres.sum.1<-com.index.multi(traits.finch, \n                           index=c(\"sum(scale(x), na.rm=T)\", \"sum(x, na.rm=T)\"), \n                           by.factor=names_sp_ind_plot, nullmodels=c(2,2), \n                           ind.plot=ind.plot.finch, nperm=9, sp=sp.finch)\n\nattributes(ses.listofindex(as.listofindex(list(res.sum.1))))\n@\n\n\\newpage\nA more interesting example using the function \\code(hypervolume) from the package ... hypervolume.  We show here several results which differe in there factor that delimit the group to calculate different hypervolume (argument \"byfactor\"). \n\n<<result='hide'>>=\nres.hv.1<-com.index.multi(traits.finch.mice, \n                          index=c(\"as.numeric(try(hypervolume(na.omit(x), reps=100, \n                                  bandwidth=0.2, verbose=F, warnings=F)@Volume))\"),\n                          by.factor=rep(1,length(names_sp_ind_plot)), nullmodels=c(2,2),\n                          ind.plot=ind.plot.finch, nperm=9, sp=sp.finch)\n\nres.hv.2<-com.index.multi(traits.finch.mice, \n                          index=c(\"as.numeric(try(hypervolume(na.omit(x), reps=100, \n                                  bandwidth=0.2, verbose=F, warnings=F)@Volume))\"), \n                          by.factor=names_sp_ind_plot, nullmodels=c(2,2), \n                          ind.plot=ind.plot.finch, nperm=9, sp=sp.finch)\n\nres.hv.3<-com.index.multi(traits.finch.mice, \n                          index=c(\"as.numeric(try(hypervolume(na.omit(x), reps=100,\n                                  bandwidth=0.2, verbose=F, warnings=F)@Volume))\"), \n                          by.factor=ind.plot.finch, nullmodels=c(2,2), \n                          ind.plot=ind.plot.finch, nperm=9, sp=sp.finch)\n\nres.hv.4<-com.index.multi(traits.finch.mice, \n                          index=c(\"as.numeric(try(hypervolume(na.omit(x), reps=100, \n                                  bandwidth=0.2, verbose=F, warnings=F)@Volume))\"), \n                          by.factor=sp.finch, nullmodels=c(2,2), \n                          ind.plot=ind.plot.finch, nperm=9, sp=sp.finch)\n\nlist.ind.multi<-as.listofindex(list(res.hv.2, res.hv.3, res.hv.4))\n\nses.list.multi<-ses.listofindex(list.ind.multi)\n@\n\n<<dev='pdf', fig.width=4, fig.height=4>>=\nplot(list.ind.multi)\nplot(list.ind.multi, xlim=c(-200,20))\n@\n\n\n\\section{Others graphics functions}\n\nUsing rasterVis to obtain more color schemes. \n<<>>=\nrequire(rasterVis)\n# Custom theme (from rasterVis package)\nmy.theme <- BuRdTheme()\n# Customize the colorkey\nmy.ckey <- list(col=my.theme$regions$col)\n@\n\nPlot the p-value or the ses values using the function \\code(levelplot).\n\n<<dev='pdf'>>=\nlevelplot(t(rbind(res.finch$pval_T_IP.IC.inf,\n                  res.finch$pval_T_IC.IR.inf, \n                  res.finch$pval_T_PC.PR.inf)), \n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\n@\n\n\n<<dev='pdf'>>=\nlevelplot(t(ses(res.finch$T_IP.IC,res.finch$T_IP.IC_nm)$ses), \n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\nlevelplot(cbind(t(ses(res.finch$T_IP.IC,res.finch$T_IP.IC_nm)$ses), \n                t(ses(res.finch$T_IC.IR,res.finch$T_IP.IC_nm)$ses),\n                t(ses(res.finch$T_PC.PR,res.finch$T_IP.IC_nm)$ses))\n          , colorkey=my.ckey, par.settings=my.theme,border=\"black\")\n@\n\nAn other example using \\code(ses.listofindex). The first plot represent \"ses\" values and the second one the result of a test with H0: observed index value are greater than what we can expect using the null model (alpha=2.5\\%).\n\n<<dev='pdf'>>=\n\nses.list<-ses.listofindex(i.l1)\n\nlevelplot(t(rbind(ses.list[[1]]$ses, ses.list[[2]]$ses, \n                  ses.list[[3]]$ses,  ses.list[[4]]$ses)),\n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\n\nlevelplot(t(rbind(ses.list[[1]]$ses>ses.list[[1]]$ses.sup, \n                  ses.list[[2]]$ses>ses.list[[2]]$ses.sup,\n                  ses.list[[3]]$ses>ses.list[[3]]$ses.sup,\n                  ses.list[[4]]$ses>ses.list[[4]]$ses.sup)),\n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\n@\n\n\n<<dev='pdf', fig.width=6, fig.height=2>>=\nses.list.multi<-ses.listofindex(list.ind.multi)\n\nses.list.multi[[1]]<-lapply(ses.list.multi[[1]],\n                            function(x) x[!is.na(ses.list.multi[[1]][[2]])] )\nses.list.multi[[2]]<-lapply(ses.list.multi[[2]], \n                            function(x) x[!is.na(ses.list.multi[[2]][[2]])] )\nses.list.multi[[3]]<-lapply(ses.list.multi[[3]],\n                            function(x) x[!is.na(ses.list.multi[[3]][[2]])] )\n\nlevelplot(t(as.matrix(ses.list.multi[[1]]$ses)),\n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\nlevelplot(t(as.matrix(ses.list.multi[[2]]$ses)),\n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\nlevelplot(t(as.matrix(ses.list.multi[[3]]$ses)),\n          colorkey=my.ckey, par.settings=my.theme,border=\"black\")\n\n@\n\n\n\\end{document}\n",
    "created" : 1397027645233.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3035621566",
    "id" : "E0DBF8F1",
    "lastKnownWriteTime" : 1397049239,
    "path" : "C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats/example.finch-cati.Rnw",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "sweave"
}