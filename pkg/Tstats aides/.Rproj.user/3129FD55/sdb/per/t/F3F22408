{
    "contents" : "#Function for Tstats Package\t\t\t\t\t\n\n### Function to calcul Tstats \nTstats<-function(Ttraits, Tind_plot, Tsp, nperm=NULL, printprogress=TRUE, p.value=TRUE, ...){\n\t#6 variances: I: individual, P: population, C: community, R: region\n\t#IP; IC; IR; PC; PR; CR\n\t\n\t#Ttraits is the matrix of individual traits, Tind_plot is the name of the plot in which the individu is (factor type), and Tsp is the species name of each individual\n\t\n\tnames_sp_ind_plot<-as.factor(paste(Tsp, Tind_plot, sep=\"@\")) \n\tTplotsp=unlist(strsplit(levels(names_sp_ind_plot),split=\"@\"))[2*(1:nlevels(names_sp_ind_plot))]; names(Tplotsp)=levels(names_sp_ind_plot);\n\t#Tplotsp is the plot in wich the population is\n  \n  \n\t######################################## \n\t####\tCalcul of observed values\t####\n\t######################################## \n\n\t#________________________________________\n\t#Objects creation\n\tmean_IP<-matrix(nrow=nlevels(names_sp_ind_plot), ncol=ncol(Ttraits)); rownames(mean_IP)=levels(names_sp_ind_plot);\n\tmean_PC<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n\tvar_IP<-matrix(nrow=nlevels(names_sp_ind_plot), ncol=ncol(Ttraits))\n\tvar_PC<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n\tvar_CR<-vector()\n\tvar_IC<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n\tvar_PR<-vector()\n\tvar_IR<-vector()\n\tT_IP.IC<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n\tT_IC.IR<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n\tT_PC.PR<-matrix(nrow=nlevels(Tind_plot), ncol=ncol(Ttraits))\n  \n\tfor (t in 1: ncol(Ttraits)){\n\t\tmean_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot  ,mean, na.rm=T)\n\t\tmean_PC[,t]<-tapply(mean_IP[,t], Tplotsp , mean, na.rm=T)\n\t\t\n\t\tvar_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot, var, na.rm=T)\n\t\tvar_PC[,t]<-tapply(mean_IP[,t], Tplotsp  ,var, na.rm=T)\n\t\tvar_CR[t]<-var(mean_PC[,t], na.rm=T)\n\t\tvar_IC[,t]<-tapply(Ttraits[,t], Tind_plot  ,var, na.rm=T)\n\t\tvar_PR[t]<-var(as.vector(mean_IP[,t]), na.rm=T)\n\t\tvar_IR[t]<-var(Ttraits[,t], na.rm=T)\n\t\t  \n\t\tfor(s in 1 : nlevels(Tind_plot)){\n\t\t\tT_IP.IC[s,t]<-mean(var_IP[grepl(levels(Tind_plot)[s],Tplotsp),t], na.rm=T)/var_IC[s,t]\n\t\t\tT_IC.IR[s,t]<-var_IC[s,t]/var_IR[t]\n\t\t\tT_PC.PR[s,t]<-var_PC[s,t]/var_PR[t]\n\t\t}\n\t}\n\t\n\t#________________________________________\n\t\n\t######################################### \n\t#### \t  Creating null models  \t ####\n\t######################################### \n\t\n\tif(is.numeric(nperm)){\n\t\t\n\t\tvar_IP_nm1<-array(dim=c(nperm,ncol(Ttraits),nrow=length(Tplotsp)))\n\t\tvar_PC_nm3<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n\t\tvar_IC_nm1<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n\t\tvar_IC_nm2<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n\t\tvar_PR_nm3<-array(dim=c(nperm,ncol(Ttraits)))\n\t\tvar_IR_nm2<-array(dim=c(nperm,ncol(Ttraits)))\n       \n\t\tmean_IP_nm3<-array(dim=c(nperm,ncol(Ttraits),length(Tplotsp)))\n\t\tmean_PC_nm3<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n       \n\t\tTtraits.nm1<-list()\n\t\tTtraits.nm2<-list()\n\t\tTtraits.nm3<-list()\n              \n\t\tT_IP.IC_nm1<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n\t\tT_IC.IR_nm2<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n\t\tT_PC.PR_nm3<-array(dim=c(nperm,ncol(Ttraits),nlevels(Tind_plot)))\n      \n       \n\t\t#Creation of three null models \n\t\tprint(\"creating null models\")\n\t\t\n\t\t#________________________________________\n\t\t#modèle nul 1: permutation des valeurs de traits des individus dans la communauté   \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm1[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)) {\n\t\t\t\tTtraits.nm1[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tif (length(Ttraits[Tind_plot==levels(Tind_plot)[s], t]) != 1) {\n\t\t\t\t\t\tperm_ind_plot1<-sample(Ttraits[Tind_plot==levels(Tind_plot)[s], t], table(Tind_plot)[s])\n\t\t\t\t\t\tTtraits.nm1[[t]][[s]][[i]]<-perm_ind_plot1\n\t\t\t\t\t}\n\t\t\t\t\telse {Ttraits.nm1[[t]][[s]][[i]]<-\"NA\"}\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(printprogress==T){print(paste(round(t/ncol(Ttraits)/3*100,2),\"%\")) } else {}\n\t\t}\n\t\t\n\t\t#________________________________________\n\t\t#modèle nul 2: permutation des valeurs de traits des individus de la région    \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm2[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)) {\n\t\t\t\tTtraits.nm2[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tperm_ind_plot2<-sample(Ttraits[, t], table(Tind_plot)[s])\n\t\t\t\t\tTtraits.nm2[[t]][[s]][[i]]<-perm_ind_plot2\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(printprogress==T){print(paste(round(33.3+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}\n\t\t\n\t\t#________________________________________  \n\t\t#modèle nul 3: permutation des espèces au niveau de la région   \n\t\tTtraits_by_sp<-apply(Ttraits,2,function(x) tapply(x,names_sp_ind_plot,mean))  \n\t\tTtraits_by_pop<-Ttraits_by_sp[match(names_sp_ind_plot,rownames(Ttraits_by_sp)),]\n\t\t#Ttraits_by_sp<-aggregate(Ttraits, by = list(names_sp_ind_plot), mean, na.rm = T)[,-1] \n\t\t\t\t\n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm3[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)){\n\t\t\t\tTtraits.nm3[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tperm_ind_plot3<-sample(Ttraits_by_pop, table(Tind_plot)[s])\n\t\t\t\t\tTtraits.nm3[[t]][[s]][[i]]<-perm_ind_plot3\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(printprogress==T){print(paste(round(66.6+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}\n\t\t\n\t\t#________________________________________\n\t\n\t\t######################################### \n\t\t#### calcul of Tstats on null models ####\n\t\t######################################### \n\n\t\tprint(\"calcul of Tstats using null models\")\n\t\t\n\t\tyy<-length(names_sp_ind_plot)\n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tfor(i in 1:nperm){ \n\t\t\t\tmean_IP_nm3[i,t,]<-tapply(unlist(Ttraits.nm3[[t]])[(1+(i-1)*yy) : (i*yy)], names_sp_ind_plot  ,function(x) mean(x, na.rm=T))\n\t\t\t\tmean_PC_nm3[i,t,]<-tapply(mean_IP_nm3[i,t,], Tplotsp, mean, na.rm=T)\n\t\t\t}\n\t\t\tif(printprogress==T){print(paste(round(t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t} \n\t\t   \n\t\t   \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tfor(i in 1:nperm){\n\t\t\t\tvar_IP_nm1[i,t,]<-tapply(unlist(Ttraits.nm1[[t]])[(1+(i-1)*yy) : (i*yy)], names_sp_ind_plot  ,function(x) var(x, na.rm=T))\n\t\t\t\tvar_PC_nm3[i,t,]<-tapply(mean_IP_nm3[i,t,], Tplotsp  ,var, na.rm=T)\n\t\t\t\tvar_IC_nm1[i,t,]<-tapply(unlist(Ttraits.nm1[[t]])[(1+(i-1)*yy) : (i*yy)], Tind_plot  ,function(x) var(x, na.rm=T))\n\t\t\t\tvar_IC_nm2[i,t,]<-tapply(unlist(Ttraits.nm2[[t]])[(1+(i-1)*yy) : (i*yy)], Tind_plot  ,function(x) var(x, na.rm=T))\n\t\t\t\tvar_PR_nm3[i,t]<-var(as.vector(mean_IP_nm3[i,t,]), na.rm=T)\n\t\t\t\tvar_IR_nm2[i,t]<-var(unlist(Ttraits.nm2[[t]])[(1+(i-1)*yy) : (i*yy)], na.rm=T)\n\t\t\t}\n\t\t\tif(printprogress==T){print(paste(round(33.3+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}\n\t\t \n\t\t   \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tfor(i in 1:nperm){\n\t\t\t\tfor(s in 1 : nlevels(Tind_plot)){\n\t\t\t\t\tT_IP.IC_nm1[i,t,s]<-mean(var_IP_nm1[i,t,grepl(levels(Tind_plot)[s],Tplotsp)], na.rm=T)/var_IC_nm1[i,t,s] \n\t\t\t\t\tT_IC.IR_nm2[i,t,s]<-var_IC_nm2[i,t,s]/var_IR_nm2[i,t]\n\t\t\t\t\tT_PC.PR_nm3[i,t,s]<-var_PC_nm3[i,t,s]/var_PR_nm3[i,t]\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(printprogress==T){print(paste(round(66.6+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}       \n\t\t      \n\t}#end of calcul of Tstats using null models\n         \n\tcolnames(T_IP.IC)<-colnames(Ttraits)\n    colnames(T_IC.IR)<-colnames(Ttraits)\n    colnames(T_PC.PR)<-colnames(Ttraits)\n  \n\tif(is.numeric(nperm)){\n\t\tcolnames(T_IP.IC_nm1)<-colnames(Ttraits)\n\t\tcolnames(T_IC.IR_nm2)<-colnames(Ttraits)\n\t\tcolnames(T_PC.PR_nm3)<-colnames(Ttraits)\n\t}\n\t\n\trownames(T_IP.IC)<-levels(Tplotsp)\n  \trownames(T_IC.IR)<-levels(Tplotsp)\n \trownames(T_PC.PR)<-levels(Tplotsp)\n \n\t\n\t#________________________________________\n    res<-list()\n    res$T_IP.IC<-T_IP.IC\n    res$T_IC.IR<-T_IC.IR\n    res$T_PC.PR<-T_PC.PR\n    res$var_IP<-var_IP\n    res$var_PC<-var_PC\n    res$var_CR<-var_CR\n\tres$var_IC<-var_IC\n    res$var_PR<-var_PR\n    res$var_IR<-var_IR\n\t\n\tif(is.numeric(nperm)){\t \n\t\tres$T_IP.IC_nm<-T_IP.IC_nm1\n       \tres$T_IC.IR_nm<-T_IC.IR_nm2\n        res$T_PC.PR_nm<-T_PC.PR_nm3\n    }   \n    else{}\n \t\n \t#________________________________________\n \t\n \t######################################### \n\t####\t\t calcul of p.value\t\t ####\n\t######################################### \n \n \tprint(\"calcul of p.value\")\n \t\n \tif(p.value==T){\n\t\tp.valueT_IP.IC.sup<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\tp.valueT_IC.IR.sup<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\tp.valueT_PC.PR.sup<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\t\n\t\tp.valueT_IP.IC.inf<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\tp.valueT_IC.IR.inf<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\tp.valueT_PC.PR.inf<-matrix(ncol=ncol(Ttraits), nrow= nlevels(Tind_plot))\n\t\t\n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tfor(s in 1:  nlevels(Tind_plot)){\n \t\t\t\tp.valueT_IP.IC.sup[s,t]<-sum(res$T_IP.IC[s,t]<res$T_IP.IC_nm[,t,s], na.rm=T)/(1+length(res$T_IP.IC_nm[,t,s]))\n \t\t\t\tp.valueT_IC.IR.sup[s,t]<-sum(res$T_IC.IR[s,t]<res$T_IC.IR_nm[,t,s], na.rm=T)/(1+length(res$T_IC.IR_nm[,t,s]))\n \t\t\t\tp.valueT_PC.PR.sup[s,t]<-sum(res$T_PC.PR[s,t]<res$T_PC.PR_nm[,t,s], na.rm=T)/(1+length(res$T_PC.PR_nm[,t,s]))\n\t\t\n\t\t\t\tp.valueT_IP.IC.inf[s,t]<-sum(res$T_IP.IC[s,t]>res$T_IP.IC_nm[,t,s], na.rm=T)/(1+length(res$T_IP.IC_nm[,t,s]))\n\t\t\t\tp.valueT_IC.IR.inf[s,t]<-sum(res$T_IC.IR[s,t]>res$T_IC.IR_nm[,t,s], na.rm=T)/(1+length(res$T_IC.IR_nm[,t,s]))\n\t\t\t\tp.valueT_PC.PR.inf[s,t]<-sum(res$T_PC.PR[s,t]>res$T_PC.PR_nm[,t,s], na.rm=T)/(1+length(res$T_PC.PR_nm[,t,s]))\n\t\t\t}\n\t\t}\t\n\t    \n\t\tcolnames(p.valueT_IP.IC.sup)<-colnames(Ttraits)\n\t\tcolnames(p.valueT_IC.IR.sup)<-colnames(Ttraits)\n\t\tcolnames(p.valueT_PC.PR.sup)<-colnames(Ttraits)\n\t\t\n\t\trownames(p.valueT_IP.IC.sup)<-levels(Tplotsp)\n\t\trownames(p.valueT_IC.IR.sup)<-levels(Tplotsp)\n\t\trownames(p.valueT_PC.PR.sup)<-levels(Tplotsp)\n  \t\n\t\tcolnames(p.valueT_IP.IC.inf)<-colnames(Ttraits)\n\t\tcolnames(p.valueT_IC.IR.inf)<-colnames(Ttraits)\n\t\tcolnames(p.valueT_PC.PR.inf)<-colnames(Ttraits)\n\t\t\n\t\trownames(p.valueT_IP.IC.inf)<-levels(Tplotsp)\n\t\trownames(p.valueT_IC.IR.inf)<-levels(Tplotsp)\n\t\trownames(p.valueT_PC.PR.inf)<-levels(Tplotsp)\n\n \t}\n \telse{}\n    \n    #________________________________________\n    \t\n\tif(p.value==T) {\n\t\tres$pval_T_IP.IC.inf<-p.valueT_IP.IC.inf\n\t\tres$pval_T_IC.IR.inf<-p.valueT_IC.IR.inf\n\t\tres$pval_T_PC.PR.inf<-p.valueT_PC.PR.inf\n\t\t\n\t\tres$pval_T_IP.IC.sup<-p.valueT_IP.IC.sup\n\t\tres$pval_T_IC.IR.sup<-p.valueT_IC.IR.sup\n\t\tres$pval_T_PC.PR.sup<-p.valueT_PC.PR.sup\n\t}\n\telse{}\n\t\n   \n    \n    return(res)\n}\n\n\n### Function to represent standardised effect size of Tstats using null models\nplot.ses.Tstats<-function(tstats=NULL, val.quant=c(0.025,0.975), col.Tstats=c(\"red\",\"purple\",\"green\"), type=\"normal\", add.conf=TRUE, ...){\n\t#possible type = \"color_cond\", \"simple\", \"simple_range\", \"normal\" and \"barplot\"\t\n\t\n\t#________________________________________\n\t#Calcul of standardised effect size\n\tses.T_IP.IC<-(tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR<-(tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR<-(tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.inf<-(apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.inf<-(apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.inf<-(apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.sup<-(apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.sup<-(apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.sup<-(apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t\n\t#________________________________________\n\t#Condition to be significantly different from null models with respect to values of quantile choose\n\tcond.T_IP.IC.inf<-ses.T_IP.IC<ses.T_IP.IC.inf\n\tcond.T_IC.IR.inf<-ses.T_IC.IR<ses.T_IC.IR.inf\n\tcond.T_PC.PR.inf<-ses.T_PC.PR<ses.T_PC.PR.inf\n\t\t\n\tcond.T_IP.IC.sup<-ses.T_IP.IC>ses.T_IP.IC.sup\n\tcond.T_IC.IR.sup<-ses.T_IC.IR>ses.T_IC.IR.sup\n\tcond.T_PC.PR.sup<-ses.T_PC.PR>ses.T_PC.PR.sup\n\t\n\tall=c(ses.T_IP.IC,ses.T_IC.IR,ses.T_PC.PR)\n\tpar(mar=c(5, 7, 4, 2))\n\tplot(0, ylab=\"Traits\",yaxt= \"n\", xlab=\"Tstats Standardized Effect Size\", ylim=c(5*dim(tstats$T_IP.IC)[2],0), xlim=c(min(all, na.rm=T),max(all, na.rm=T)), col=\"black\", type=\"l\")\n\taxis(side=2, seq(from=5.5, to=4*dim(tstats$T_IP.IC)[2]+1.5, by=4), labels=colnames(tstats$T_IP.IC), las=1, cex.axis=0.7 ) \n\tlegend(\"bottom\", inset=.005, title=\"Tstats\", c(\"T_IP.IC\",\"T_IC.IR\",\"T_PC.PR\"), fill=col.Tstats, horiz=TRUE, cex=0.7, bty=\"n\")\n\t\n\t#________________________________________\n\t#plot : possible type = \"color_cond\", \"simple\", \"simple_range\", \"normal\" and \"barplot\"\t\n\t\n\t#__________\n\tif(type==\"color_cond\"){\n\t\t\n\t\tif(length(col.Tstats)==3) {col.Tstats[4:6]<-\"grey\"} \n\t\tif(length(col.Tstats)!=6) {print(\"Warnings: plot type color_cond need 3 or 6 colors in the argument col.Tstats\")}\n\t\t\t\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\tpoints(ses.T_IP.IC[,t], rep(t*4, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[4])\n\t\t\tpoints(ses.T_IC.IR[,t], rep(t*4+1, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[5])\n\t\t\tpoints(ses.T_PC.PR[,t], rep(t*4+2, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[6])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(ses.T_IP.IC[,t][cond.T_IP.IC.inf[,t]], rep(t*4,times=length(ses.T_IP.IC.inf[,t][cond.T_IP.IC.inf[,t]])),pch=16, col=col.Tstats[1])\n\t\t\tpoints(ses.T_IC.IR[,t][cond.T_IC.IR.inf[,t]], rep(t*4+1,times=length(ses.T_IC.IR.inf[,t][cond.T_IC.IR.inf[,t]])), pch=16, col=col.Tstats[2])\n\t\t\tpoints(ses.T_PC.PR[,t][cond.T_PC.PR.inf[,t]], rep(t*4+2, times=length(ses.T_PC.PR.inf[,t][cond.T_PC.PR.inf[,t]])), pch=16, col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(ses.T_IP.IC[,t][cond.T_IP.IC.sup[,t]], rep(t*4,times=length(ses.T_IP.IC.sup[,t][cond.T_IP.IC.sup[,t]])), pch=16, col=col.Tstats[1])\n\t\t\tpoints(ses.T_IC.IR[,t][cond.T_IC.IR.sup[,t]], rep(t*4+1,times=length(ses.T_IC.IR.sup[,t][cond.T_IC.IR.sup[,t]])), pch=16, col=col.Tstats[2])\n\t\t\tpoints(ses.T_PC.PR[,t][cond.T_PC.PR.sup[,t]], rep(t*4+2, times=length(ses.T_PC.PR.sup[,t][cond.T_PC.PR.sup[,t]])), pch=16, col=col.Tstats[3])\n\t\t\t\n\t\t\tif (length(ses.T_IP.IC.inf[,t][cond.T_IP.IC.inf[,t]])>0) \t{text(ses.T_IP.IC[,t][cond.T_IP.IC.inf[,t]], rep(t*4-2,times=length(ses.T_IP.IC.inf[,t][cond.T_IP.IC.inf[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.inf[,t]], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}\n\t\t\tif (length(ses.T_IC.IR.inf[,t][cond.T_IC.IR.inf[,t]])>0) \t{text(ses.T_IC.IR[,t][cond.T_IC.IR.inf[,t]], rep(t*4,times=length(ses.T_IC.IR.inf[,t][cond.T_IC.IR.inf[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.inf[,t]], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}\n\t\t\tif (length(ses.T_PC.PR.inf[,t][cond.T_PC.PR.inf[,t]])>0) \t{text(ses.T_PC.PR[,t][cond.T_PC.PR.inf[,t]], rep(t*4+4, times=length(ses.T_PC.PR.inf[,t][cond.T_PC.PR.inf[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.inf[,t]], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}\n\t\t\t\n\t\t\tif (length(ses.T_IP.IC.sup[,t][cond.T_IP.IC.sup[,t]])>0) \t{text(ses.T_IP.IC[,t][cond.T_IP.IC.sup[,t]], rep(t*4-2,times=length(ses.T_IP.IC.sup[,t][cond.T_IP.IC.sup[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.sup[,t]], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}\n\t\t\tif (length(ses.T_IC.IR.sup[,t][cond.T_IC.IR.sup[,t]])>0) \t{text(ses.T_IC.IR[,t][cond.T_IC.IR.sup[,t]], rep(t*4,times=length(ses.T_IC.IR.sup[,t][cond.T_IC.IR.sup[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.sup[,t]], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}\n\t\t\tif (length(ses.T_PC.PR.sup[,t][cond.T_PC.PR.sup[,t]])>0) \t{text(ses.T_PC.PR[,t][cond.T_PC.PR.sup[,t]], rep(t*4+4, times=length(ses.T_PC.PR.sup[,t][cond.T_PC.PR.sup[,t]])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.sup[,t]], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}\n\t\t\t\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\n\t}\n\n\t#__________\n\telse if(type==\"simple\"){\n\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\t\n\t\t\tpoints(ses.T_IP.IC[,t], rep(t*4, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[1])\n\t\t\tpoints(ses.T_IC.IR[,t], rep(t*4+1, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[2])\n\t\t\tpoints(ses.T_PC.PR[,t], rep(t*4+2, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.sup[,t], na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.sup[,t], na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.sup[,t], na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.inf[,t], na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.inf[,t], na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.inf[,t], na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\t\n\t\t\t\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\n\t}\n\t\n\t#__________\n\telse if(type==\"simple_range\"){\n\t\t\t\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\n\t\t\tsegments(mean(ses.T_IP.IC[,t], na.rm=T)+sd(ses.T_IP.IC[,t], na.rm=T), t*4, mean(ses.T_IP.IC[,t], na.rm=T)-sd(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tsegments(mean(ses.T_IC.IR[,t], na.rm=T)+sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, mean(ses.T_IC.IR[,t], na.rm=T)-sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\t\tsegments(mean(ses.T_PC.PR[,t], na.rm=T)+sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, mean(ses.T_PC.PR[,t], na.rm=T)-sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.sup[,t], na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.sup[,t], na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.sup[,t], na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.inf[,t], na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.inf[,t], na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.inf[,t], na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\t\n\t\t\t\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\t\n\t}\n\t\n\t#__________\n\telse if(type==\"normal\"){\n\t\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\n\t\t\tpoints(mean(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\n\t\t\t\n\t\t\tsegments(mean(ses.T_IP.IC[,t], na.rm=T)+sd(ses.T_IP.IC[,t], na.rm=T), t*4, mean(ses.T_IP.IC[,t], na.rm=T)-sd(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tsegments(mean(ses.T_IC.IR[,t], na.rm=T)+sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, mean(ses.T_IC.IR[,t], na.rm=T)-sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\t\tsegments(mean(ses.T_PC.PR[,t], na.rm=T)+sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, mean(ses.T_PC.PR[,t], na.rm=T)-sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t   \n\t\t\tpoints(min(ses.T_IP.IC[,t], na.rm=T), t*4, pch=\"*\", col=col.Tstats[1])\n\t\t\tpoints(min(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=\"*\", col=col.Tstats[2])\n\t\t\tpoints(min(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=\"*\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(max(ses.T_IP.IC[,t], na.rm=T), t*4, pch=\"*\", col=col.Tstats[1])\n\t\t\tpoints(max(ses.T_IC.IR[,t], na.rm=T), t*4+1,pch=\"*\", col=col.Tstats[2])\n\t\t\tpoints(max(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=\"*\", col=col.Tstats[3])\n\t\t\t\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\n\t\t\n\t\tif(add.conf==T){\n\t\t\tpoints(colMeans(ses.T_IP.IC.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(colMeans(ses.T_IC.IR.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(colMeans(ses.T_PC.PR.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+2, type=\"l\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(colMeans(ses.T_IP.IC.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(colMeans(ses.T_IC.IR.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(colMeans(ses.T_PC.PR.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+2, type=\"l\", col=col.Tstats[3])  \n\t\t}\t\n\t\telse {}\n\t}\n\n\t#__________\n\telse if(type==\"barplot\"){\n\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\n\t\t\tsegments(mean(ses.T_IP.IC[,t], na.rm=T), t*4  , 0, t*4, pch=17, col=col.Tstats[1], lwd=8)\n\t\t\tsegments(mean(ses.T_IC.IR[,t], na.rm=T), t*4+1, 0, t*4+1, pch=17, col=col.Tstats[2], lwd=8)\n\t\t\tsegments(mean(ses.T_PC.PR[,t], na.rm=T), t*4+2, 0, t*4+2, pch=17, col=col.Tstats[3], lwd=8)\n\t\t\t\n\t\t\tsegments(mean(ses.T_IP.IC[,t], na.rm=T)+sd(ses.T_IP.IC[,t], na.rm=T), t*4, mean(ses.T_IP.IC[,t], na.rm=T)-sd(ses.T_IP.IC[,t], na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tsegments(mean(ses.T_IC.IR[,t], na.rm=T)+sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, mean(ses.T_IC.IR[,t], na.rm=T)-sd(ses.T_IC.IR[,t], na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\t\tsegments(mean(ses.T_PC.PR[,t], na.rm=T)+sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, mean(ses.T_PC.PR[,t], na.rm=T)-sd(ses.T_PC.PR[,t], na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\n\t\t\n\t\tif(add.conf==T){\n\t\t\tpoints(colMeans(ses.T_IP.IC.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(colMeans(ses.T_IC.IR.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(colMeans(ses.T_PC.PR.sup, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+2, type=\"l\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(colMeans(ses.T_IP.IC.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(colMeans(ses.T_IC.IR.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(colMeans(ses.T_PC.PR.inf, na.rm=T), (1:dim(tstats$T_IP.IC)[2])*4+2, type=\"l\", col=col.Tstats[3])  \n\t\t}\n\t\telse {}\n\t}\n\telse{print(paste(\"Error:\",type,\"is not a valid type of plot\"))}\n\t\n\tpar(mar=c(5, 4, 4, 2) + 0.1) #return to default parameter\n}\n\n\n### Function to represent correlations between Tstats\nplot.cor.Tstats<-function(tstats=NULL, val.quant=c(0.025,0.975), add.text=FALSE, obj=\"traits\", col.obj=NULL, plot.ask=TRUE, ...) {\n\t\n\toldpar<-par(no.readonly = TRUE)\n\tpar(ask=plot.ask)\n\t\n\t#________________________________________\n\tses.T_IP.IC.moy<-t(colMeans((tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\tses.T_IC.IR.moy<-t(colMeans((tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\tses.T_PC.PR.moy<-t(colMeans((tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\t\n\tses.T_IP.IC<-t((tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_IC.IR<-t((tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_PC.PR<-t((tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\t\n\tses.T_IP.IC.inf<-t((apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_IC.IR.inf<-t((apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_PC.PR.inf<-t((apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\t\n\tses.T_IP.IC.sup<-t((apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_IC.IR.sup<-t((apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\tses.T_PC.PR.sup<-t((apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T)))\n\t\n\tcond.T_IP.IC.inf<-ses.T_IP.IC<ses.T_IP.IC.inf\n\tcond.T_IC.IR.inf<-ses.T_IC.IR<ses.T_IC.IR.inf\n\tcond.T_PC.PR.inf<-ses.T_PC.PR<ses.T_PC.PR.inf\n\t\n\tcond.T_IP.IC.sup<-ses.T_IP.IC>ses.T_IP.IC.sup\n\tcond.T_IC.IR.sup<-ses.T_IC.IR>ses.T_IC.IR.sup\n\tcond.T_PC.PR.sup<-ses.T_PC.PR>ses.T_PC.PR.sup\n\t\n\t#________________________________________\n\tif(obj==\"traits\"){\n\t\t\n\t\tif(is.null(col.obj)) {col.obj<-rainbow(dim(tstats$T_IP.IC)[2])}\n\t\telse{}\n\t\t\n\t\t#__________\n\t\t#First panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[2])+1,sqrt(dim(tstats$T_IP.IC)[2])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IP.IC\", xlab=\"ses.T_IC.IR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\t\t\n\t\tpar(mar=c(1,2,1,1))\n\t\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\tplot(as.vector(ses.T_IP.IC)~as.vector(ses.T_IC.IR), col=\"grey\", pch=20, main=rownames(ses.T_IC.IR)[t])\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_IC.IR.inf)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_IC.IR.sup)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR)),as.vector(ses.T_IP.IC.inf)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR)),as.vector(ses.T_IP.IC.sup)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tsegments(rep(rowMeans(ses.T_IC.IR, na.rm=T)[t], times=dim(tstats$T_IP.IC)[1]), rep(rowMeans(ses.T_IP.IC, na.rm=T)[t], times=dim(tstats$T_IP.IC)[1]) ,ses.T_IC.IR[t,],  ses.T_IP.IC[t,], col=col.obj[t])\n\t\t}\n\t\t\n\t\t#__________\n\t\t#Second panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[2])+1,sqrt(dim(tstats$T_IP.IC)[2])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IP.IC\", xlab=\"ses.T_PC.PR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\t\t\n\t\tpar(mar=c(1,2,1,1))\n\t\t\n\t\tfor(t in 1:dim(tstats$T_IP.IC)[2]){\n\t\t\tplot(as.vector(ses.T_IP.IC)~as.vector(ses.T_PC.PR), col=\"grey\", pch=20, main=rownames(ses.T_PC.PR)[t])\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_PC.PR.inf)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_PC.PR.sup)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IP.IC.inf)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IP.IC.sup)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tsegments(rep(rowMeans(ses.T_PC.PR, na.rm=T)[t], times=dim(tstats$T_IP.IC)[1]), rep(rowMeans(ses.T_IP.IC, na.rm=T)[t], times=dim(tstats$T_IP.IC)[1]) ,ses.T_PC.PR[t,],  ses.T_IP.IC[t,], col=col.obj[t])\n\t\t}\n\t\t\n\t\t#__________\n\t\t#Third panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[2])+1,sqrt(dim(tstats$T_IP.IC)[2])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IC.IR\", xlab=\"ses.T_PC.PR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\t\n\t\tpar(mar=c(1,2,1,1))\n\t\t\n\t\tfor(t in 1:dim(tstats$T_IC.IR)[2]){\n\t\t\tplot(as.vector(ses.T_IC.IR)~as.vector(ses.T_PC.PR), col=\"grey\", pch=20, main=rownames(ses.T_PC.PR)[t])\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR))~as.vector(ses.T_PC.PR.inf)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR))~as.vector(ses.T_PC.PR.sup)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IC.IR.inf)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IC.IR.sup)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tsegments(rep(rowMeans(ses.T_PC.PR, na.rm=T)[t], times=dim(tstats$T_IC.IR)[1]), rep(rowMeans(ses.T_IC.IR, na.rm=T)[t], times=dim(tstats$T_IC.IR)[1]) ,ses.T_PC.PR[t,],  ses.T_IC.IR[t,], col=col.obj[t])\n\t\t}\n\t}\n\n\t#________________________________________\n\telse if(obj==\"community\"){\n\t\n\t\tif(is.null(col.obj)) {col.obj<-rainbow(dim(tstats$T_IP.IC)[1])}\n\t\telse{}\n\t\t\n\t\t#__________\n\t\t#First panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[1])+1,sqrt(dim(tstats$T_IP.IC)[1])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IC.IR\", xlab=\"ses.T_IC.IR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\n\t\tpar(mar=c(1,2,1,1))\n\t\t\n\t\tfor(s in 1:dim(tstats$T_IP.IC)[1]){\n\t\t\tplot(as.vector(ses.T_IP.IC)~as.vector(ses.T_IC.IR), col=\"grey\", pch=20, main=colnames(ses.T_PC.PR)[s] )\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_IC.IR.inf)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_IC.IR.sup)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR)),as.vector(ses.T_IP.IC.inf)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR)),as.vector(ses.T_IP.IC.sup)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tsegments(rep(colMeans(ses.T_IC.IR, na.rm=T)[s], times=dim(tstats$T_IP.IC)[2]), rep(colMeans(ses.T_IP.IC, na.rm=T)[s], times=dim(tstats$T_IP.IC)[2]) ,ses.T_IC.IR[,s],  ses.T_IP.IC[,s], col=col.obj[s])\n\t\t}\n\t\t\n\t\t#__________\n\t\t#Second panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[1])+1,sqrt(dim(tstats$T_IP.IC)[1])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\t\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IP.IC\", xlab=\"ses.T_PC.PR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\t\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\n\t\t\t\t\n\t\tpar(mar=c(1,2,1,1))\n\t\t\n\t\tfor(s in 1:dim(tstats$T_IP.IC)[1]){\n\t\t\tplot(as.vector(ses.T_IP.IC)~as.vector(ses.T_PC.PR), col=\"grey\", pch=20, main=colnames(ses.T_PC.PR)[s] )\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_PC.PR.inf)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IP.IC))~as.vector(ses.T_PC.PR.sup)[order(as.vector(ses.T_IP.IC))][!is.na(as.vector(ses.T_IP.IC))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IP.IC.inf)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IP.IC.sup)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tsegments(rep(colMeans(ses.T_PC.PR, na.rm=T)[s], times=dim(tstats$T_IP.IC)[2]), rep(colMeans(ses.T_IP.IC, na.rm=T)[s], times=dim(tstats$T_IP.IC)[2]) ,ses.T_PC.PR[,s],  ses.T_IP.IC[,s], col=col.obj[s])\n\t\t}\n\t\t\n\t\t#__________\n\t\t#Third panel of figures\n\t\tpar(mfrow=c(sqrt(dim(tstats$T_IP.IC)[1])+1,sqrt(dim(tstats$T_IP.IC)[1])+1))\n\t\tpar(mar=c(4,4,1,1))\n\t\t\n\t\tplot(0,0, xlim=c(-4,4), ylim=c(-4,4), cex.lab=1.2 ,ylab=\"ses.T_IC.IR\", xlab=\"ses.T_PC.PR\", type=\"n\")\n\t\tabline(h=2)\n\t\tabline(v=2)\n\t\tabline(h=-2)\n\t\tabline(v=-2)\n\t\t\n\t\ttext(0,0,\"null \\r\\n model \\r\\n zone\")\n\t\t\t\t\n\t\tpar(mar=c(1,2,1,1))\n\n\t\tfor(s in 1:dim(tstats$T_IC.IR)[1]){\n\t\t\tplot(as.vector(ses.T_IC.IR)~as.vector(ses.T_PC.PR), col=\"grey\", pch=20, main=colnames(ses.T_PC.PR)[s] )\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR))~as.vector(ses.T_PC.PR.inf)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_IC.IR))~as.vector(ses.T_PC.PR.sup)[order(as.vector(ses.T_IC.IR))][!is.na(as.vector(ses.T_IC.IR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IC.IR.inf)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tpoints(sort(as.vector(ses.T_PC.PR)),as.vector(ses.T_IC.IR.sup)[order(as.vector(ses.T_PC.PR))][!is.na(as.vector(ses.T_PC.PR))], type=\"l\")\n\t\t\tsegments(rep(colMeans(ses.T_PC.PR, na.rm=T)[s], times=dim(tstats$T_IC.IR)[2]), rep(colMeans(ses.T_IC.IR, na.rm=T)[s], times=dim(tstats$T_IC.IR)[2]) ,ses.T_PC.PR[,s],  ses.T_IC.IR[,s], col=col.obj[s])\n\t\t}\t\n\t}\n\t\n\telse{print(\"Error: obj need to be either traits or community\")}\n\t\n\tpar(oldpar)\n}\n\n\n### Function to summarize traits and community which show a significative difference between observed and simulated value\nsummary.Tstats<-function(tstats=NULL, val.quant=c(0.025,0.975), type=\"all\", ...) {\n\t\n\t#________________________________________\n\tses.T_IP.IC<-(tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR<-(tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR<-(tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.inf<-(apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.inf<-(apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.inf<-(apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.sup<-(apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.sup<-(apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.sup<-(apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T))\n\t\n\tses.T_IP.IC.mean<-t(colMeans((tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\tses.T_IC.IR.mean<-t(colMeans((tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\tses.T_PC.PR.mean<-t(colMeans((tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, c(3,2), function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, c(3,2), function(x) sd(x, na.rm=T)), na.rm=T))\n\t  \n\tses.T_IP.IC.inf.mean<-apply(ses.T_IP.IC.inf,2, mean)\n\tses.T_IC.IR.inf.mean<-apply(ses.T_IC.IR.inf,2, mean)\n\tses.T_PC.PR.inf.mean<-apply(ses.T_PC.PR.inf,2, mean)\t  \n\t\n\tses.T_IP.IC.sup.mean<-apply(ses.T_IP.IC.sup,2, mean)\n\tses.T_IC.IR.sup.mean<-apply(ses.T_IC.IR.sup,2, mean)\n\tses.T_PC.PR.sup.mean<-apply(ses.T_PC.PR.sup,2, mean)\n\t\n\t#________________________________________\n\t#Condition to be significantly different from null models with respect to values of quantile choose\n\tcond.T_IP.IC.inf<-ses.T_IP.IC<ses.T_IP.IC.inf\n\tcond.T_IC.IR.inf<-ses.T_IC.IR<ses.T_IC.IR.inf\n\tcond.T_PC.PR.inf<-ses.T_PC.PR<ses.T_PC.PR.inf\n\t\t\n\tcond.T_IP.IC.sup<-ses.T_IP.IC>ses.T_IP.IC.sup\n\tcond.T_IC.IR.sup<-ses.T_IC.IR>ses.T_IC.IR.sup\n\tcond.T_PC.PR.sup<-ses.T_PC.PR>ses.T_PC.PR.sup\n\t\n\tcond.T_IP.IC.inf.mean<-ses.T_IP.IC.mean<ses.T_IP.IC.inf.mean\n\tcond.T_IC.IR.inf.mean<-ses.T_IC.IR.mean<ses.T_IC.IR.inf.mean\n\tcond.T_PC.PR.inf.mean<-ses.T_PC.PR.mean<ses.T_PC.PR.inf.mean\n\t\t\n\tcond.T_IP.IC.sup.mean<-ses.T_IP.IC.mean>ses.T_IP.IC.sup.mean\n\tcond.T_IC.IR.sup.mean<-ses.T_IC.IR.mean>ses.T_IC.IR.sup.mean\n\tcond.T_PC.PR.sup.mean<-ses.T_PC.PR.mean>ses.T_PC.PR.sup.mean\n\n\t\n\t#________________________________________\n\tif(type==\"binary\"){\n\tsumm.Tstats <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\tsumm.Tstats <- rbind(cond.T_IP.IC.inf.mean, cond.T_IP.IC.sup.mean ,cond.T_IC.IR.inf.mean, cond.T_IC.IR.sup.mean ,cond.T_PC.PR.inf.mean, cond.T_IC.IR.sup.mean)\n\t}\n\t\n\t#________________________________________\n\telse if(type==\"percent\"){\n\t\t\n\t\tsumm.Tstats <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tsumm.Tstats[1,]<-paste(round(colSums(cond.T_IP.IC.inf, na.rm=T)/colSums(!is.na(cond.T_IP.IC.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats[2,]<-paste(round(colSums(cond.T_IP.IC.sup, na.rm=T)/colSums(!is.na(cond.T_IP.IC.sup)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats[3,]<-paste(round(colSums(cond.T_IC.IR.inf, na.rm=T)/colSums(!is.na(cond.T_IC.IR.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats[4,]<-paste(round(colSums(cond.T_IC.IR.sup, na.rm=T)/colSums(!is.na(cond.T_IC.IR.sup)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats[5,]<-paste(round(colSums(cond.T_PC.PR.inf, na.rm=T)/colSums(!is.na(cond.T_PC.PR.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats[6,]<-paste(round(colSums(cond.T_PC.PR.sup, na.rm=T)/colSums(!is.na(cond.T_PC.PR.sup)),2)*100, \"%\", sep=\"\")\n\t\t\t\t\n\t\tsumm.Tstats[1,][cond.T_IP.IC.inf.mean]<-paste(round(colSums(cond.T_IP.IC.inf, na.rm=T)/colSums(!is.na(cond.T_IP.IC.inf)),2)[cond.T_IP.IC.inf.mean]*100, \"%\" ,\"*\", sep=\"\")\n\t\tsumm.Tstats[2,][cond.T_IP.IC.sup.mean]<-paste(round(colSums(cond.T_IP.IC.sup, na.rm=T)/colSums(!is.na(cond.T_IP.IC.sup)),2)[cond.T_IP.IC.sup.mean]*100, \"%\" ,\"*\", sep=\"\")\n\t\tsumm.Tstats[3,][cond.T_IC.IR.inf.mean]<-paste(round(colSums(cond.T_IC.IR.inf, na.rm=T)/colSums(!is.na(cond.T_IC.IR.inf)),2)[cond.T_IC.IR.inf.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats[4,][cond.T_IC.IR.sup.mean]<-paste(round(colSums(cond.T_IC.IR.sup, na.rm=T)/colSums(!is.na(cond.T_IC.IR.sup)),2)[cond.T_IC.IR.sup.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats[5,][cond.T_PC.PR.inf.mean]<-paste(round(colSums(cond.T_PC.PR.inf, na.rm=T)/colSums(!is.na(cond.T_PC.PR.inf)),2)[cond.T_PC.PR.inf.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats[6,][cond.T_PC.PR.sup.mean]<-paste(round(colSums(cond.T_PC.PR.sup, na.rm=T)/colSums(!is.na(cond.T_PC.PR.sup)),2)[cond.T_PC.PR.sup.mean]*100, \"%\",\"*\", sep=\"\")\t\n\t}\n\t\n\t#________________________________________\n\telse if(type==\"plot\"){\n\t\t\n\t\tsumm.Tstats <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tfor(t in 1: dim(cond.T_IP.IC.inf)[2]){\n\t\t\t\n\t\t\tif(sum(cond.T_IP.IC.inf[,t], na.rm=T)>0) \n\t\t\t\t{summ.Tstats[1,t]<-paste( na.exclude(rownames(cond.T_IP.IC.inf)[cond.T_IP.IC.inf[,t]]), collapse=\"_\") }\n\t\t\telse{summ.Tstats[1,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_IP.IC.sup[,t], na.rm=T)>0) \n\t\t\t\t{summ.Tstats[2,t]<-paste( na.exclude(rownames(cond.T_IP.IC.sup)[cond.T_IP.IC.sup[,t]]), collapse=\"_\")  }\n\t\t\telse{summ.Tstats[2,t]<-\"H0 not rejected\"}\n\t\t\t\t\t\t\t\t\n\t\t\tif(sum(cond.T_IC.IR.inf[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats[3,t]<-paste( na.exclude(rownames(cond.T_IC.IR.inf)[cond.T_IP.IC.inf[,t]]), collapse=\"_\")  }\n\t\t\telse{summ.Tstats[3,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_IC.IR.sup[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats[4,t]<-paste( na.exclude(rownames(cond.T_IC.IR.sup)[cond.T_IC.IR.sup[,t]]), collapse=\"_\")\t}\n\t\t\telse{summ.Tstats[4,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_PC.PR.inf[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats[5,t]<-paste( na.exclude(rownames(cond.T_PC.PR.inf)[cond.T_PC.PR.inf[,t]]), collapse=\"_\") \t}\n\t\t\telse{summ.Tstats[5,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_PC.PR.sup[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats[6,t]<-paste( na.exclude(rownames(cond.T_PC.PR.sup)[cond.T_PC.PR.sup[,t]]), collapse=\"_\") \t}\n\t\t\telse{summ.Tstats[6,t]<-\"H0 not rejected\"}\n\t\t}\n\t\n\t}\n\t\n\t#________________________________________\n\telse if(type==\"p_value\"){\n\t\tsumm.Tstats <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tsumm.Tstats <- rbind(tstats$pval_T_IP.IC.inf, tstats$pval_T_IP.IC.sup , tstats$pval_T_IC.IR.inf, tstats$pval_T_IC.IR.sup , tstats$pval_T_PC.PR.inf, tstats$pval_T_PC.PR.sup)\n\t}\n\n\t\n\t#________________________________________\n\telse if(type==\"all\"){\n\t\tsumm.Tstats<-list()\n\t\t\n\t\t#__________\n\t\t##p.value\n\t\tsumm.Tstats$p.value <-matrix(\"H0 not rejected\", nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tsumm.Tstats$p.value <- rbind(tstats$pval_T_IP.IC.inf, tstats$pval_T_IP.IC.sup , tstats$pval_T_IC.IR.inf, tstats$pval_T_IC.IR.sup , tstats$pval_T_PC.PR.inf, tstats$pval_T_PC.PR.sup)\n\t\n\t\t#__________\n\t\t##percent\n\t\tsumm.Tstats$percent <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tsumm.Tstats$percent[1,]<-paste(round(colSums(cond.T_IP.IC.inf, na.rm=T)/colSums(!is.na(cond.T_IP.IC.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats$percent[2,]<-paste(round(colSums(cond.T_IP.IC.sup, na.rm=T)/colSums(!is.na(cond.T_IP.IC.sup)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats$percent[3,]<-paste(round(colSums(cond.T_IC.IR.inf, na.rm=T)/colSums(!is.na(cond.T_IC.IR.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats$percent[4,]<-paste(round(colSums(cond.T_IC.IR.sup, na.rm=T)/colSums(!is.na(cond.T_IC.IR.sup)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats$percent[5,]<-paste(round(colSums(cond.T_PC.PR.inf, na.rm=T)/colSums(!is.na(cond.T_PC.PR.inf)),2)*100, \"%\", sep=\"\")\n\t\tsumm.Tstats$percent[6,]<-paste(round(colSums(cond.T_PC.PR.sup, na.rm=T)/colSums(!is.na(cond.T_PC.PR.sup)),2)*100, \"%\", sep=\"\")\n\t\t\t\t\n\t\tsumm.Tstats$percent[1,][cond.T_IP.IC.inf.mean]<-paste(round(colSums(cond.T_IP.IC.inf, na.rm=T)/colSums(!is.na(cond.T_IP.IC.inf)),2)[cond.T_IP.IC.inf.mean]*100, \"%\" ,\"*\", sep=\"\")\n\t\tsumm.Tstats$percent[2,][cond.T_IP.IC.sup.mean]<-paste(round(colSums(cond.T_IP.IC.sup, na.rm=T)/colSums(!is.na(cond.T_IP.IC.sup)),2)[cond.T_IP.IC.sup.mean]*100, \"%\" ,\"*\", sep=\"\")\n\t\tsumm.Tstats$percent[3,][cond.T_IC.IR.inf.mean]<-paste(round(colSums(cond.T_IC.IR.inf, na.rm=T)/colSums(!is.na(cond.T_IC.IR.inf)),2)[cond.T_IC.IR.inf.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats$percent[4,][cond.T_IC.IR.sup.mean]<-paste(round(colSums(cond.T_IC.IR.sup, na.rm=T)/colSums(!is.na(cond.T_IC.IR.sup)),2)[cond.T_IC.IR.sup.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats$percent[5,][cond.T_PC.PR.inf.mean]<-paste(round(colSums(cond.T_PC.PR.inf, na.rm=T)/colSums(!is.na(cond.T_PC.PR.inf)),2)[cond.T_PC.PR.inf.mean]*100, \"%\",\"*\", sep=\"\")\n\t\tsumm.Tstats$percent[6,][cond.T_PC.PR.sup.mean]<-paste(round(colSums(cond.T_PC.PR.sup, na.rm=T)/colSums(!is.na(cond.T_PC.PR.sup)),2)[cond.T_PC.PR.sup.mean]*100, \"%\",\"*\", sep=\"\")\t\n\t\t\n\t\t#__________\n\t\t##plot\n\t\tsumm.Tstats$plot <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tfor(t in 1: dim(cond.T_IP.IC.inf)[2]){\n\t\t\t\n\t\t\tif(sum(cond.T_IP.IC.inf[,t], na.rm=T)>0) \n\t\t\t\t{summ.Tstats$plot[1,t]<-paste( na.exclude(rownames(cond.T_IP.IC.inf)[cond.T_IP.IC.inf[,t]]), collapse=\"_\") }\n\t\t\telse{summ.Tstats$plot[1,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_IP.IC.sup[,t], na.rm=T)>0) \n\t\t\t\t{summ.Tstats$plot[2,t]<-paste( na.exclude(rownames(cond.T_IP.IC.sup)[cond.T_IP.IC.sup[,t]]), collapse=\"_\")  }\n\t\t\telse{summ.Tstats$plot[2,t]<-\"H0 not rejected\"}\n\t\t\t\t\t\t\t\t\n\t\t\tif(sum(cond.T_IC.IR.inf[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats$plot[3,t]<-paste( na.exclude(rownames(cond.T_IC.IR.inf)[cond.T_IP.IC.inf[,t]]), collapse=\"_\")  }\n\t\t\telse{summ.Tstats$plot[3,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_IC.IR.sup[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats$plot[4,t]<-paste( na.exclude(rownames(cond.T_IC.IR.sup)[cond.T_IC.IR.sup[,t]]), collapse=\"_\")\t}\n\t\t\telse{summ.Tstats$plot[4,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_PC.PR.inf[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats$plot[5,t]<-paste( na.exclude(rownames(cond.T_PC.PR.inf)[cond.T_PC.PR.inf[,t]]), collapse=\"_\") \t}\n\t\t\telse{summ.Tstats$plot[5,t]<-\"H0 not rejected\"}\n\t\t\t\t\n\t\t\tif(sum(cond.T_PC.PR.sup[,t], na.rm=T)>0)\n\t\t\t\t{summ.Tstats$plot[6,t]<-paste( na.exclude(rownames(cond.T_PC.PR.sup)[cond.T_PC.PR.sup[,t]]), collapse=\"_\") \t}\n\t\t\telse{summ.Tstats$plot[6,t]<-\"H0 not rejected\"}\t\t\n\t\t}\n\t\t\n\t\t#__________\n\t\t##binary\n\t\tsumm.Tstats$binary <-matrix(\"H0 not rejected\",nrow=6, ncol=dim(cond.T_IP.IC.inf)[2])\n\t\tsumm.Tstats$binary <- rbind(cond.T_IP.IC.inf.mean, cond.T_IP.IC.sup.mean ,cond.T_IC.IR.inf.mean, cond.T_IC.IR.sup.mean ,cond.T_PC.PR.inf.mean, cond.T_IC.IR.sup.mean)\n\t}\n\t\n\telse{stop(\"Error: type must be 'binary', 'percent', 'p.value', 'plot' or 'all'.\")}\n\t\n\tif(is.list(summ.Tstats)) {\n\t\trownames(summ.Tstats$p.value)<-c(rep(\"T_IP.IC.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_IP.IC.sup\",dim(tstats$T_IP.IC)[1]), rep(\"T_IC.IR.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_IC.IR.sup\",dim(tstats$T_IP.IC)[1]), rep(\"T_PC.PR.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_PC.PR.sup\",dim(tstats$T_IP.IC)[1]))\n\t\trownames(summ.Tstats$binary)<-c(\"T_IP.IC.inf\", \"T_IP.IC.sup\", \"T_IC.IR.inf\", \"T_IC.IR.sup\", \"T_PC.PR.inf\", \"T_PC.PR.sup\")\n\t\trownames(summ.Tstats$percent)<-c(\"T_IP.IC.inf\", \"T_IP.IC.sup\", \"T_IC.IR.inf\", \"T_IC.IR.sup\", \"T_PC.PR.inf\", \"T_PC.PR.sup\")\n\t\trownames(summ.Tstats$plot)<-c(\"T_IP.IC.inf\", \"T_IP.IC.sup\", \"T_IC.IR.inf\", \"T_IC.IR.sup\", \"T_PC.PR.inf\", \"T_PC.PR.sup\")\n\t}\n\t\n\telse if( type!=\"p_value\"){\n\t\trownames(summ.Tstats)<-c(rep(\"T_IP.IC.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_IP.IC.sup\",dim(tstats$T_IP.IC)[1]), rep(\"T_IC.IR.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_IC.IR.sup\",dim(tstats$T_IP.IC)[1]), rep(\"T_PC.PR.inf\",dim(tstats$T_IP.IC)[1]), rep(\"T_PC.PR.sup\",dim(tstats$T_IP.IC)[1]))\n\t}\n\t\n\telse if( type==\"p_value\"){\n\t\trownames(summ.Tstats)<-c(\"T_IP.IC.inf\", \"T_IP.IC.sup\", \"T_IC.IR.inf\", \"T_IC.IR.sup\", \"T_PC.PR.inf\", \"T_PC.PR.sup\")\n\t}\n\t\n\telse{stop(\"Error: type must be 'binary', 'percent', 'p.value', 'plot' or 'all'.\")}\n\t\n\treturn(summ.Tstats)\n}\n\n\n\n### Function to calcul SES\nses<-function(obs=NULL, nullmodel=NULL, val.quant=c(0.025,0.975) ){\n\t\n\tif (class(nullmodel)==\"list\"){\n\t\tif (class(nullmodel[[1]])==\"list\"){\n\t\t\tnullmodel<-array(unlist(nullmodel), dim=c(nrow(nullmodel[[1]][[1]]),ncol(nullmodel[[1]][[1]]), length(unlist(nullmodel))/nrow(nullmodel[[1]][[1]])/ncol(nullmodel[[1]][[1]])))\n\t\t}\n\t\t\n\t\telse {nullmodel<-array(unlist(nullmodel), dim=c(nrow(nullmodel[[1]]),ncol(nullmodel[[1]]), length(unlist(nullmodel))/nrow(nullmodel[[1]])/ncol(nullmodel[[1]])))}\n\t}\n\t\n\tif (class(obs)==\"list\"){\n\t\tobs<-matrix(obs[[1]], nrow=nrow(obs[[1]]), ncol=ncol(obs[[1]]))\n\t}\n\t\n\tif(is.null(dim(obs))) {\n\t\tcond<-c(NA)\n\t\t\n\t\tif(length(obs)==dim(nullmodel)[1]){\n\t\tcond<-1\n\t\t}\n\t\t\n\t\telse if(length(obs)==dim(nullmodel)[2]){\n\t\tcond<-2\n\t\t}\n\t\t\n\t\telse if(length(obs)==dim(nullmodel)[3]){\n\t\tcond<-3\n\t\t}\n\t\t\n\t}\n\t\n\tif(!is.null(dim(obs))) {\t\n\t\tcond<-c(NA,NA)\n\t\t\n\t\tif(dim(obs)[1]==dim(nullmodel)[1]){\n\t\tcond[1]<-1\n\t\t}\n\t\t\n\t\tif(dim(obs)[1]==dim(nullmodel)[2]){\n\t\tcond[1]<-2\n\t\t}\n\t\t\n\t\tif(dim(obs)[1]==dim(nullmodel)[3]){\n\t\tcond[1]<-3\n\t\t}\n\t\t\n\t\t\n\t\tif(dim(obs)[2]==dim(nullmodel)[1]){\n\t\tcond[2]<-1\n\t\t}\n\t\t\n\t\tif(dim(obs)[2]==dim(nullmodel)[2]){\n\t\tcond[2]<-2\n\t\t}\n\t\t\n\t\tif(dim(obs)[2]==dim(nullmodel)[3]){\n\t\tcond[2]<-3\n\t\t}\n\t\t\n\t}\n\t\n\tres<-list()\n\tres$ses<-(obs-apply(nullmodel, cond, function(x) mean(x, na.rm=T)))/apply(nullmodel, cond, function(x) sd(x, na.rm=T))\n\tres$ses.inf<-(apply(nullmodel, cond, function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(nullmodel, cond, function(x) mean(x, na.rm=T)))/apply(nullmodel, cond, function(x) sd(x, na.rm=T))\n\tres$ses.sup<-(apply(nullmodel, cond, function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(nullmodel, cond, function(x) mean(x, na.rm=T)))/apply(nullmodel, cond, function(x) sd(x, na.rm=T))\n\n\treturn(res)\n}\n\n\n\n### Function to represent summarize Tstats\nplot.bar.Tstats<-function(tstats=NULL, val.quant=c(0.025,0.975), col.Tstats=c(\"red\",\"purple\",\"green\",\"white\"), ...){\n    \n  T_IP.IC.inf<-apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))\n  T_IC.IR.inf<-apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))\n  T_PC.PR.inf<-apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[1]))\n  \n  T_IP.IC.sup<-apply(tstats$T_IP.IC_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))\n  T_IC.IR.sup<-apply(tstats$T_IC.IR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))\n  T_PC.PR.sup<-apply(tstats$T_PC.PR_nm, c(3,2), function(x) quantile(x, na.rm=T, prob=val.quant[2]))\n    \n  df.bar<-barplot(rbind(colMeans(na.omit(tstats$T_IP.IC)), colMeans(na.omit(tstats$T_IC.IR)),colMeans(na.omit(tstats$T_PC.PR)),0), beside=T, plot=F)\n  barplot(rbind(colMeans(na.omit(tstats$T_IP.IC)), colMeans(na.omit(tstats$T_IC.IR)),colMeans(na.omit(tstats$T_PC.PR)),0), col=col.Tstats, beside=T, ylim=c(min(c(T_IP.IC.inf,T_IC.IR.inf,T_PC.PR.inf,colMeans(na.omit(tstats$T_IP.IC))-apply(na.omit(tstats$T_IP.IC), 2,sd),colMeans(na.omit(tstats$T_IC.IR))-apply(na.omit(tstats$T_IC.IR), 2,sd),colMeans(na.omit(tstats$T_PC.PR))-apply(na.omit(tstats$T_PC.PR), 2,sd)), na.rm=T) , max(c(colMeans(na.omit(tstats$T_IP.IC))+apply(na.omit(tstats$T_IP.IC), 2,sd),colMeans(na.omit(tstats$T_IC.IR))+apply(na.omit(tstats$T_IC.IR), 2,sd),colMeans(na.omit(tstats$T_PC.PR))+apply(na.omit(tstats$T_PC.PR), 2,sd)), na.rm=T)))\n  segments( df.bar[1,], colMeans(na.omit(tstats$T_IP.IC))+apply(na.omit(tstats$T_IP.IC), 2,sd),df.bar[1,],colMeans(na.omit(tstats$T_IP.IC))-apply(na.omit(tstats$T_IP.IC), 2,sd))\n  segments( df.bar[2,], colMeans(na.omit(tstats$T_IC.IR))+apply(na.omit(tstats$T_IC.IR), 2,sd),df.bar[2,],colMeans(na.omit(tstats$T_IC.IR))-apply(na.omit(tstats$T_IC.IR), 2,sd))\n  segments( df.bar[3,], colMeans(na.omit(tstats$T_PC.PR))+apply(na.omit(tstats$T_PC.PR), 2,sd),df.bar[3,],colMeans(na.omit(tstats$T_PC.PR))-apply(na.omit(tstats$T_PC.PR), 2,sd))\n  \n  points(type=\"l\", df.bar[1,], colMeans(T_IP.IC.sup, na.rm=T), col=col.Tstats[1])\n  points(type=\"l\", df.bar[2,], colMeans(T_IC.IR.sup, na.rm=T), col=col.Tstats[2])\n  points(type=\"l\", df.bar[3,], colMeans(T_PC.PR.sup, na.rm=T), col=col.Tstats[3])\n  \n  points(type=\"l\", df.bar[1,], colMeans(T_IP.IC.inf, na.rm=T), col=col.Tstats[1])\n  points(type=\"l\", df.bar[2,], colMeans(T_IC.IR.inf, na.rm=T), col=col.Tstats[2])\n  points(type=\"l\", df.bar[3,], colMeans(T_PC.PR.inf, na.rm=T), col=col.Tstats[3])\n  \n}\n\n\n#~ if byplot=F, plot this function by traits\nplot.filter<-function(index.list, color.cond=NULL, val.quant=c(0.025,0.975), cex.text =0.8, plot.ask=TRUE, srt.text=90, xlim=NULL, ylim=NULL, byplot=T, ...){\n\t\t\n\tnamesindex.all<-names(index.list)\n\tnindex<-length(names(index.list))/2\n\tnamesindex<-names(index.list)[seq(1,nindex*2, by=2)]\n\tnamestraits<-colnames(index.list[[1]])\n\tnamesplots<-rownames(index.list[[1]]) \n\t\n\tif(is.null(namesplots)) {print(\"rownames of index.list[[1]] is empty so names of plots cannot be plot\")}\n\tif(is.null(namestraits)) {print(\"colnames of index.list[[1]] is empty so names of traits cannot be plot\")}\n\t\n\tncom<-dim(index.list[[1]])[1]\n\tntr<-dim(index.list[[1]])[2]\n\t\n\t\n\t#________________________________________\n\t#Calcul of standardised effect size\n\t\n\tres<-list()\n\tfor (i in seq(1,nindex*2, by=2)){\n\t\tif (dim(index.list[[i]])[1] != dim(index.list[[1]])[1] ) {index.list[[i]]<-t(index.list[[i]])}\n\t\tres[[eval(namesindex.all[i])]] <- ses(obs=index.list[i], nullmodel=index.list[i+1], val.quant=val.quant)\n\t}\n\t\t\n\tif(is.null(ylim)){ ylim=c(0.5,nindex+0.5)}\n\tif(is.null(xlim)){ xlim=c(min(c(-2,unlist(res)), na.rm=T),max(c(2,unlist(res)), na.rm=T))}\n\toldpar<-par(no.readonly = TRUE)\n\tpar(ask=plot.ask)\n\t\n\tif(is.null(color.cond)) {color.cond=c(\"blue\",\"orange\")}\n\t\t\n\tif(byplot==T){\n\t\tfor (s in 1: ncom){\n\t\t\tplot(mean(res[[eval(namesindex.all[i])]]$ses[s,], na.rm=T), (1:nindex)[i] ,bty=\"n\", cex.lab=0.8, yaxt=\"n\", xlab=paste(\"SES\", namesplots[s]), ylim=ylim, xlim=xlim, pch=16, type=\"n\")\n\t\t\tabline(v=0)\t\n\t\t\t\t\t\n\t\t\tfor(i in 1:nindex){\n\t\t\t\tabline(h=(1:nindex)[i], lty=2, col=\"lightgray\")\t\n\t\t\t\t\t\n\t\t\t\tsegments(mean(res[[eval(namesindex[i])]]$ses.sup[s,], na.rm=T), (1:nindex)[i], mean(res[[eval(namesindex[i])]]$ses.inf[s,], na.rm=T), (1:nindex)[i])\n\t\t\t\t\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses.sup[s,], na.rm=T), (1:nindex)[i], pch=\"|\")\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses.inf[s,], na.rm=T), (1:nindex)[i], pch=\"|\")\n\t\t\t\t\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[s,], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[s,]) ), pch=\"*\")\n\t\t\t\t\t\t\t\t\n\t\t\t\tcond.sup<-res[[eval(namesindex[i])]]$ses[s,]>res[[eval(namesindex[i])]]$ses.sup[s,]\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[s,][cond.sup], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[s,][cond.sup]) ), pch=\"*\", cex=3, col=color.cond[2])\n\t\t\t\t\n\t\t\t\tcond.inf<-res[[eval(namesindex[i])]]$ses[s,]<res[[eval(namesindex[i])]]$ses.inf[s,]\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[s,][cond.inf], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[s,][cond.inf]) ), pch=\"*\", cex=3, col=color.cond[1])\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses[s,], na.rm=T), (1:nindex)[i], col=\"red\", pch=16)\n\t\t\t\t\n\t\t\t\ttext(1, (1:nindex)[i]+0.3, namesindex[i], cex=0.8,  pos=4, font=2)\n\t\t\t\t\t\t\t\t\n\t\t\t\tchh <- par()$cxy[ 2 ]  ##  character height\n\t\t\t\ttext(res[[eval(namesindex[i])]]$ses[s,], chh + rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[s,]) ), namestraits, cex=cex.text, srt=srt.text,)\n\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\t\n\telse if(byplot==F){\n\t\tfor (t in 1: ntr){\n\t\t\tplot(mean(res[[eval(namesindex.all[i])]]$ses[,t], na.rm=T), (1:nindex)[i] ,bty=\"n\", cex.lab=0.8, yaxt=\"n\", xlab=paste(\"SES\", namestraits[t]), ylim=ylim, xlim=xlim, pch=16, type=\"n\")\n\t\t\tabline(v=0)\t\n\t\t\t\t\t\n\t\t\tfor(i in 1:nindex){\n\t\t\t\t\n\t\t\t\tabline(h=(1:nindex)[i], lty=2, col=\"lightgray\")\t\t\n\t\t\t\t\n\t\t\t\tsegments(mean(res[[eval(namesindex[i])]]$ses.sup[,t], na.rm=T), (1:nindex)[i], mean(res[[eval(namesindex[i])]]$ses.inf[,t], na.rm=T), (1:nindex)[i])\n\t\t\t\t\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses.sup[,t], na.rm=T), (1:nindex)[i], pch=\"|\")\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses.inf[,t], na.rm=T), (1:nindex)[i], pch=\"|\")\n\t\t\t\t\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[,t], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[,t]) ), pch=\"*\")\n\t\t\t\t\t\t\t\t\n\t\t\t\tcond.sup<-res[[eval(namesindex[i])]]$ses[,t]>res[[eval(namesindex[i])]]$ses.sup[,t]\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[,t][cond.sup], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[,t][cond.sup]) ), pch=\"*\", cex=3, col=color.cond[2])\n\t\t\t\t\n\t\t\t\tcond.inf<-res[[eval(namesindex[i])]]$ses[,t]<res[[eval(namesindex[i])]]$ses.inf[,t]\n\t\t\t\tpoints(res[[eval(namesindex[i])]]$ses[,t][cond.inf], rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[,t][cond.inf]) ), pch=\"*\", cex=3, col=color.cond[1])\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tpoints(mean(res[[eval(namesindex[i])]]$ses[,t], na.rm=T), (1:nindex)[i], col=\"red\", pch=16)\n\t\t\t\t\n\t\t\t\ttext(1, (1:nindex)[i]+0.3, namesindex[i], cex=0.8,  pos=4, font=2)\n\t\t\t\t\t\t\t\t\n\t\t\t\tchh <- par()$cxy[ 2 ]  ##  character height\n\t\t\t\ttext(res[[eval(namesindex[i])]]$ses[,t], chh + rep( (1:nindex)[i], length(res[[eval(namesindex[i])]]$ses[,t]) ), namesplots, cex=cex.text, srt=srt.text,)\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t}\n\t\t}\t\n\t}\n}\n\n\n\n\nplot.filter.c<-function(com.object.ind=NULL, com.object.sp=NULL, tstats=NULL, color.cond=NULL, val.quant=c(0.025, 0.975), xlim=NULL, ylim=NULL, byplot=TRUE, cex.text =0.8, plot.ask=TRUE, srt.text=90,...){\n  \t\n\t\n\tindex.list.internal.ind<-list(T_IP.IC=tstats$T_IP.IC, T_IP.IC_nm=tstats$T_IP.IC_nm, \n\t\t\t\t\t\t\t  CV.ind=com.object.ind$CV.NND_obs, CV.ind.null=com.object.ind$Null_CV,\n\t\t\t\t\t\t\t  kurtosis.ind=com.object.ind$kurtosis_obs, kurtosis.ind.null=com.object.ind$Null_kurtosis)\n\n\t\n\tindex.list.internal.sp<-list(CV.sp=com.object.sp$CV.NND_obs, CV.sp.null=com.object.sp$Null_CV,\n\t\t\t\t\t\t\t  kurtosis.sp=com.object.sp$kurtosis_obs, kurtosis.sp.null=com.object.sp$Null_kurtosis)\n\n\trownames(tstats$T_IC.IR)<-rownames(tstats$T_IP.IC)\n\tindex.list.external.ind<-list(T_IC.IR=tstats$T_IC.IR, T_IC.IR_nm=tstats$T_IC.IR_nm, \n\t\t\t\t\t\t\t\t  range.ind=com.object.ind$Range_obs, range.ind.null=com.object.ind$Null_range,\n\t\t\t\t\t\t\t\t  mean.ind=com.object.ind$Mean_obs, mean.ind.null=com.object.ind$Null_mean)\n\t\n\trownames(tstats$T_PC.PR)<-rownames(tstats$T_IP.IC)\n\tindex.list.external.sp<-list(T_PC.PR=tstats$T_PC.PR, T_PC.PR_nm=tstats$T_PC.PR_nm,\n\t\t\t\t\t\t\t\t  range.sp=com.object.sp$Range_obs, range.sp.null=com.object.sp$Null_range,\n\t\t\t\t\t\t\t\t  mean.sp=com.object.sp$Mean_obs, mean.sp.null=com.object.sp$Null_mean)\n\n    par(mfrow=c(2,2))\n                 \n\tplot.filter(index.list.internal.ind, color.cond=color.cond, val.quant=val.quant, cex.text =cex.text, plot.ask=plot.ask, srt.text=srt.text, xlim=xlim, ylim=ylim, byplot=byplot)\n\tplot.filter(index.list.internal.sp, color.cond=color.cond, val.quant=val.quant, cex.text =cex.text, plot.ask=plot.ask, srt.text=srt.text, xlim=xlim, ylim=ylim, byplot=byplot)\n\tplot.filter(index.list.external.ind, color.cond=color.cond, val.quant=val.quant, cex.text =cex.text, plot.ask=plot.ask, srt.text=srt.text, xlim=xlim, ylim=ylim, byplot=byplot)\n\tplot.filter(index.list.external.sp, color.cond=color.cond, val.quant=val.quant, cex.text =cex.text, plot.ask=plot.ask, srt.text=srt.text, xlim=xlim, ylim=ylim, byplot=byplot)\n\n\t\n    par(mfrow=c(1,1))\n\t\n}\n\n\t\n\n# plot ses of an index against an other variable wich correspond to plot. For example species richness or a gradient variable\n\nplot.ses.var<-function(index.list, variable=NULL, color.traits=NULL, val.quant=c(0.025,0.975), resume=FALSE){\n\n\ty<-variable\n\t\n\tnamesindex.all<-names(index.list)\n\tnindex<-length(names(index.list))/2\n\tnamesindex<-names(index.list)[seq(1,nindex*2, by=2)]\n\tnamestraits<-colnames(index.list[[1]])\n\tnamescommunity<-rownames(index.list[[1]])\n\t\n\tncom<-dim(index.list[[1]])[1]\n\tntr<-dim(index.list[[1]])[2]\n\t\n\tif(is.null(color.traits)){\n\t\tcolor.traits<-palette(terrain.colors(ntr))\n\t}\n\t\n\t#________________________________________\n\t#Calcul of standardised effect size\n\t\n\tres<-list()\n\tfor (i in seq(1,nindex*2, by=2)){\n\t\tres[[eval(namesindex.all[i])]] <- ses(obs=index.list[i], nullmodel=index.list[i+1], val.quant=val.quant)\n\t}\n\n\n\tpar(mfrow=c(ceiling(sqrt(nindex))-1, ceiling(sqrt(nindex))))\n\t\n\tylim=c(min(y, na.rm=T), max(y, na.rm=T))\n\t\t\n\t\t\n\tfor(i in seq(1,nindex*2, by=2)){\n\t\tif(resume==FALSE){xlim=c(min(c(-4,res[[eval(namesindex.all[i])]]$ses), na.rm=T), max(c(4,res[[eval(namesindex.all[i])]]$ses), na.rm=T))}\n\t\telse{xlim=c(min(c(-4,rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)-apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T), rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)+apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T)), na.rm=T), max(c(4,rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)-apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T), rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)+apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T)), na.rm=T))  }\n\t\t\n\t\tplot(0, 0 ,bty=\"n\", cex.lab=0.8, xlab=paste(\"SES\", namesindex.all[i]), ylim=ylim, xlim=xlim, pch=16, type=\"n\")\t\t\n\t\tabline(v=0, lty=1, col=\"black\")\t\n\t\t\n\t\t\n\t\tif(resume==TRUE){\n\t\t\tpoints(rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T), y, pch=16)\n\t\t\tsegments(rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)-apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T), y, rowMeans(res[[eval(namesindex.all[i])]]$ses, na.rm=T)+apply(res[[eval(namesindex.all[i])]]$ses, 1,sd,na.rm=T), y, pch=16)\n\t\t}\n\t\t\n\t\telse{\n\t\t\tfor(nco in 1:ncom){\n\t\t\t\tabline(h=y[nco], lty=2, pch=0.5, col=\"lightgray\")\n\t\t\t}\n\t\t\t\n\t\t\tfor (t in 1: ntr){\n\t\t\t\tpoints(res[[eval(namesindex.all[i])]]$ses[,t] , y, pch=16, col=color.traits[t])\t\t\n\t\t\t}\n\t\t}\t\n\t}\n\t\n\tif(resume!=TRUE){\n\t\tplot(0, 0 ,bty=\"n\", cex.lab=0.8, xlab=paste(\"SES\", namesindex.all[i]), ylim=ylim, xlim=xlim, pch=16, type=\"n\")\n\t\tlegend(\"center\", legend=namestraits, fill=color.traits, bty=\"n\", ncol= round(sqrt(nlevels(as.factor(namestraits)))-1 ) )\n\t}\n\t\n}\n\n\nplot.dens<-function(traits=NULL, var.1=NULL, var.2=NULL, col.dens=NULL, plot.ask=TRUE, ylim.cex=1, cex.leg=0.8, polyg=TRUE, sort.by.traits=F)  {\n\n\tvar.1<-as.factor(as.vector(var.1))\n\tvar.2<-as.factor(as.vector(var.2))\n\toldpar<-par(no.readonly = TRUE)\n\tpar(ask=plot.ask)\n\t\n\tnamestraits<-colnames(traits)\n\tnamescommunity<-unique(var.1)\n\tncom<-length(namescommunity)\n\t\n\tntr<-dim(traits)[2]\n\t\n\tif(is.null(col.dens)) { col.dens<-rainbow(nlevels(as.factor(var.2))) }\n\t\n\tpar(mfrow=c(2,2))\n\t\n\tif(!sort.by.traits){\n\t\tfor(co in 1:ncom){\n\t\t\tfor(t in 1:ntr){\n\t\t\t\tif(length(na.omit(traits[as.factor(var.1)==levels(as.factor(var.1))[co],t]))>1){\n\t\t\t\t\n\t\t\t\t\tplot(main= paste(namestraits[t],levels(as.factor(var.1))[co], \" \"), density(traits[as.factor(var.1)==levels(as.factor(var.1))[co],t], na.rm=T), ylim=c(0,max(density(traits[as.factor(var.1)==levels(as.factor(var.1))[co],t], na.rm=T)$y)*ylim.cex), xlim=c(min(traits[,t], na.rm=T),max(traits[,t], na.rm=T)), col=\"black\")\n\t\t\t\t\tlines(density(traits[,t], na.rm=T), lty=2, col=\"grey\")\n\n\t\t\t\t\tif (polyg==T) {\n\t\t\t\t\t\tx<-density(traits[as.factor(var.1)==levels(as.factor(var.1))[co],t], na.rm=T)$x\n\t\t\t\t\t\ty<-density(traits[as.factor(var.1)==levels(as.factor(var.1))[co],t], na.rm=T)$y\n\t\t\t\t\t\tpolygon(c(x,rev(x)), c(rep(0,length(x)),rev(y)), border=NA, col=rgb(0.5,0.5,0.5,0.7))\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor(s in 1:nlevels(as.factor(var.2))) {\n\t\t\t\t\t\tif(length(na.omit(traits[as.factor(var.1)==levels(as.factor(var.1))[co] & as.factor(var.2)==levels(as.factor(var.2))[s],t]))>1) \n\t\t\t\t\t\t{lines(density(traits[as.factor(var.1)==levels(as.factor(var.1))[co] & as.factor(var.2)==levels(as.factor(var.2))[s],t], na.rm=T), col=col.dens[s])}\n\t\t\t\t\t\n\t\t\t\t\t\telse if(length(na.omit(traits[as.factor(var.1)==levels(as.factor(var.1))[co] & as.factor(var.2)==levels(as.factor(var.2))[s],t]))==1) \n\t\t\t\t\t\t{points(0,na.omit(traits[as.factor(var.1)==levels(as.factor(var.1))[co] & as.factor(var.2)==levels(as.factor(var.2))[s],t]), col=col.dens[s])}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tpar(mfrow=c(1,1))\n\t\tplot(0,0, type=\"n\")\n\t\tlegend(\"center\", inset=0.05,levels(as.factor(var.2)), fill=col.dens, cex=cex.leg, bty=\"n\", ncol= round(sqrt(nlevels(as.factor((var.2))))-1 ) )\n\t}\t\n\t\n\telse if(sort.by.traits){\n\t}\t\n\tpar(oldpar)\n}\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1392714692529.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3892985887",
    "id" : "F3F22408",
    "lastKnownWriteTime" : 1392364776,
    "path" : "C:/Users/taudiere/Tstats/R/function_Tstats.r",
    "project_path" : "R/function_Tstats.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}