{
    "contents" : "Tstats.hv<-function(Ttraits, Tind_plot, Tsp, nperm=NULL, printprogress=TRUE, p.value=TRUE, reps=1000, bandwidth=0.2, Warnings = T, ...){\n\t#6 variances: I: individual, P: population, C: community, R: region\n\t#IP; IC; IR; PC; PR; CR\n\t\n\t#Ttraits is the matrix of individual traits, Tind_plot is the name of the plot in which the individu is (factor type), and Tsp is the species name of each individual\n\t\n\tnames_sp_ind_plot<-as.factor(paste(Tsp, Tind_plot, sep=\"@\")) \n\tTplotsp=unlist(strsplit(levels(names_sp_ind_plot),split=\"@\"))[2*(1:nlevels(names_sp_ind_plot))]; names(Tplotsp)=levels(names_sp_ind_plot);\n\t#Tplotsp is the plot in wich the population is\n  \n  \n\t######################################## \n\t####\tCalcul of observed values\t####\n\t######################################## \n\n\t#________________________________________\n\t#Objects creation\n\tmean_IP<-vector()\n\tmean_PC<-vector()\n\tvar_IP<-vector()\n\tvar_PC<-vector()\n\tvar_CR<-vector()\n\tvar_IC<-vector()\n\tvar_PR<-vector()\n\tvar_IR<-vector()\n\tT_IP.IC<-vector()\n\tT_IC.IR<-vector()\n\tT_PC.PR<-vector()\n  \n\tmean_IP<-aggregate(Ttraits, list(names_sp_ind_plot), mean, na.rm=T)[,-1]\n\tmean_PC<-aggregate(mean_IP, list(Tplotsp), mean, na.rm=T)[,-1]\n\t\t\t\t\t\t\t\t\n\tvar_IP<-by(Ttraits, names_sp_ind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\tvar_PC<-by(mean_IP, Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\t\n\t#var_CR<-hypervolume(mean_PC, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume\n\tvar_IC<-by(Ttraits, Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\tvar_PR<-hypervolume(mean_IP, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume\n\tvar_IR<-hypervolume(Ttraits, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume\n\t  \n\tfor(s in 1 : nlevels(Tind_plot)){\n\t\tT_IP.IC[s]<-mean(var_IP[grepl(levels(Tind_plot)[s],Tplotsp)], na.rm=T)/var_IC[s]\n\t\tT_IC.IR[s]<-var_IC[s]/var_IR\n\t\tT_PC.PR[s]<-var_PC[s]/var_PR\n\t}\n\t\n\t#________________________________________\n\t\n\t######################################### \n\t#### \t  Creating null models  \t ####\n\t######################################### \n\t\n\tif(is.numeric(nperm)){\n\t\t\t\t\n\t\tvar_IP_nm1<-array(dim=c(nperm,nrow=length(Tplotsp)))\n\t\tvar_PC_nm3<-array(dim=c(nperm,nlevels(Tind_plot)))\n\t\tvar_IC_nm1<-array(dim=c(nperm,nlevels(Tind_plot)))\n\t\tvar_IC_nm2<-array(dim=c(nperm,nlevels(Tind_plot)))\n\t\tvar_PR_nm3<-vector()\n\t\tvar_IR_nm2<-vector()\n       \n\t\tmean_IP_nm3<-array(dim=c(nperm, ncol(Ttraits),nlevels(names_sp_ind_plot)))\n\t\tmean_PC_nm3<-array(dim=c(nperm, ncol(Ttraits),nlevels(Tind_plot)))\n       \n\t\tTtraits.nm1<-list()\n\t\tTtraits.nm2<-list()\n\t\tTtraits.nm3<-list()\n              \n\t\tT_IP.IC_nm1<-array(dim=c(nperm,nlevels(Tind_plot)))\n\t\tT_IC.IR_nm2<-array(dim=c(nperm,nlevels(Tind_plot)))\n\t\tT_PC.PR_nm3<-array(dim=c(nperm,nlevels(Tind_plot)))\n       \n\t\t#Creation of three null models \n\t\tprint(\"creating null models\")\n\t\t\n\t\t#________________________________________\n\t\t#modèle nul 1: permutation des valeurs de traits des individus dans la communauté   \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm1[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)) {\n\t\t\t\tTtraits.nm1[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tif (length(Ttraits[Tind_plot==levels(Tind_plot)[s], t]) != 1) {\n\t\t\t\t\t\tperm_ind_plot1<-sample(Ttraits[Tind_plot==levels(Tind_plot)[s], t], table(Tind_plot)[s])\n\t\t\t\t\t\tTtraits.nm1[[t]][[s]][[i]]<-perm_ind_plot1\n\t\t\t\t\t}\n\t\t\t\t\telse {Ttraits.nm1[[t]][[s]][[i]]<-\"NA\"}\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(printprogress==T){print(paste(round(t/ncol(Ttraits)/3*100,2),\"%\")) } else {}\n\t\t}\n\t\t\n\t\t\n\t\t#________________________________________\n\t\t#modèle nul 2: permutation des valeurs de traits des individus de la région    \n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm2[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)) {\n\t\t\t\tTtraits.nm2[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tperm_ind_plot2<-sample(Ttraits[, t], table(Tind_plot)[s])\n\t\t\t\t\tTtraits.nm2[[t]][[s]][[i]]<-perm_ind_plot2\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(printprogress==T){print(paste(round(33.3+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}\n\t\t\n\t\t#________________________________________  \n\t\t#modèle nul 3: permutation des espèces au niveau de la région   \n\t\tTtraits_by_sp<-apply(Ttraits,2,function(x) tapply(x,names_sp_ind_plot,mean))  \n\t\tTtraits_by_pop<-Ttraits_by_sp[match(names_sp_ind_plot,rownames(Ttraits_by_sp)),]\n\t\t#Ttraits_by_sp<-aggregate(Ttraits, by = list(names_sp_ind_plot), mean, na.rm = T)[,-1] \n\t\t\t\t\n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tTtraits.nm3[[t]]<-list()\n\t\t\tfor(s in 1:  nlevels(Tind_plot)){\n\t\t\t\tTtraits.nm3[[t]][[s]]<-list()\n\t\t\t\tfor(i in 1:nperm){\n\t\t\t\t\tperm_ind_plot3<-sample(Ttraits_by_pop, table(Tind_plot)[s])\n\t\t\t\t\tTtraits.nm3[[t]][[s]][[i]]<-perm_ind_plot3\n\t\t\t\t}\n\t\t\t} \n\t\t\tif(printprogress==T){print(paste(round(66.6+t/ncol(Ttraits)/3*100, 2),\"%\"))} else {}\n\t\t}\n\t\t\n\t\t#________________________________________\n\t\n\t\t######################################### \n\t\t#### calcul of Tstats on null models ####\n\t\t######################################### \n\n\t\tprint(\"calcul of Tstats using null models\")\n\t\t\n\t\t\t#________________________________________\n\t\n\t\tyy<-length(names_sp_ind_plot)\n\t\tfor (t in 1: ncol(Ttraits)){\n\t\t\tfor(i in 1:nperm){ \n\t\t\t\tmean_IP_nm3[i,t,]<-as.vector(tapply(unlist(Ttraits.nm3[[t]])[(1+(i-1)*yy) : (i*yy)], names_sp_ind_plot  ,function(x) mean(x, na.rm=T)))\n\t\t\t\tmean_PC_nm3[i,t,]<-as.vector(tapply(mean_IP_nm3[i,t,], Tplotsp, mean, na.rm=T))\n\t\t\t}\n\t\t} \n\t\t   \n\t\tfor(i in 1:nperm){\n\t\t\tvar_IP_nm1[i,]<-by(t(array(unlist(Ttraits.nm1),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), names_sp_ind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\t\t\t\n\t\t\tvar_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\t\t\tvar_IC_nm1[i,]<-by(t(array(unlist(Ttraits.nm1),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\t\t\tvar_IC_nm2[i,]<-by(t(array(unlist(Ttraits.nm2),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)\n\t\t\t\n\t\t\t\n\t\t\tvar_PR_nm3[i]<-hypervolume(mean_IP_nm3[i,,], reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume\n\t\t\tvar_IR_nm2[i]<-hypervolume(t(array(unlist(Ttraits.nm2),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume\n\t\t\t\n\t\t\tif(printprogress==T){print(paste(round(i/nperm, 2),\"%\"))} else {}\n\t\t}\n\t\t \n\t\t   \n\t\tfor(i in 1:nperm){\n\t\t\tfor(s in 1 : nlevels(Tind_plot)){\n\t\t\t\tT_IP.IC_nm1[i,s]<-mean(var_IP_nm1[i,grepl(levels(Tind_plot)[s],Tplotsp)], na.rm=T)/var_IC_nm1[i,s] \n\t\t\t\tT_IC.IR_nm2[i,s]<-var_IC_nm2[i,s]/var_IR_nm2[i]\n\t\t\t\tT_PC.PR_nm3[i,s]<-var_PC_nm3[i,s]/var_PR_nm3[i]\n\t\t\t}\n\t\t} \n\t\t       \n\t\t      \n\t}#end of calcul of Tstats using null models\n         \n\tnames(T_IP.IC)<-levels(Tplotsp)\n  \tnames(T_IC.IR)<-levels(Tplotsp)\n \tnames(T_PC.PR)<-levels(Tplotsp)\n \n\t\n\t#________________________________________\n    res<-list()\n    res$T_IP.IC<-T_IP.IC\n    res$T_IC.IR<-T_IC.IR\n    res$T_PC.PR<-T_PC.PR\n    res$var_IP<-var_IP\n    res$var_PC<-var_PC\n    res$var_CR<-var_CR\n\tres$var_IC<-var_IC\n    res$var_PR<-var_PR\n    res$var_IR<-var_IR\n\t\n\tif(is.numeric(nperm)){\t \n\t\tres$T_IP.IC_nm<-T_IP.IC_nm1\n       \tres$T_IC.IR_nm<-T_IC.IR_nm2\n        res$T_PC.PR_nm<-T_PC.PR_nm3\n    }   \n    else{}\n \t\n    return(res)\n}\n\n\n\n\n\n### Function to represent standardised effect size of Tstats using null models\nplot.ses.Tstats_hv<-function(tstats=NULL, val.quant=c(0.025,0.975), col.Tstats=c(\"red\",\"purple\",\"green\"), type=\"normal\", add.conf=TRUE, ...){\n\t#possible type = \"color_cond\", \"simple\", \"simple_range\", \"normal\" and \"barplot\"\t\n\t\n\t#________________________________________\n\t#Calcul of standardised effect size\n\tses.T_IP.IC<-(tstats$T_IP.IC-apply(tstats$T_IP.IC_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_IC.IR<-(tstats$T_IC.IR-apply(tstats$T_IC.IR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_PC.PR<-(tstats$T_PC.PR-apply(tstats$T_PC.PR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, 2, function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.inf<-(apply(tstats$T_IP.IC_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IP.IC_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.inf<-(apply(tstats$T_IC.IR_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_IC.IR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.inf<-(apply(tstats$T_PC.PR_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[1]))-apply(tstats$T_PC.PR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, 2, function(x) sd(x, na.rm=T))\n\t  \n\tses.T_IP.IC.sup<-(apply(tstats$T_IP.IC_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IP.IC_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IP.IC_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_IC.IR.sup<-(apply(tstats$T_IC.IR_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_IC.IR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_IC.IR_nm, 2, function(x) sd(x, na.rm=T))\n\tses.T_PC.PR.sup<-(apply(tstats$T_PC.PR_nm, 2, function(x) quantile(x, na.rm=T, prob=val.quant[2]))-apply(tstats$T_PC.PR_nm, 2, function(x) mean(x, na.rm=T)))/apply(tstats$T_PC.PR_nm, 2, function(x) sd(x, na.rm=T))\n\t\n\t#________________________________________\n\t#Condition to be significantly different from null models with respect to values of quantile choose\n\tcond.T_IP.IC.inf<-ses.T_IP.IC<ses.T_IP.IC.inf\n\tcond.T_IC.IR.inf<-ses.T_IC.IR<ses.T_IC.IR.inf\n\tcond.T_PC.PR.inf<-ses.T_PC.PR<ses.T_PC.PR.inf\n\t\t\n\tcond.T_IP.IC.sup<-ses.T_IP.IC>ses.T_IP.IC.sup\n\tcond.T_IC.IR.sup<-ses.T_IC.IR>ses.T_IC.IR.sup\n\tcond.T_PC.PR.sup<-ses.T_PC.PR>ses.T_PC.PR.sup\n\t\n\tall=c(ses.T_IP.IC,ses.T_IC.IR,ses.T_PC.PR)\n\tall<-all[is.finite(all)]\n\tpar(mar=c(5, 7, 4, 2))\n\tplot(0, ylab=\"Traits\",yaxt= \"n\", xlab=\"Tstats Standardized Effect Size\", ylim=c(5*length(tstats$T_IP.IC),0), xlim=c(min(all, na.rm=T),max(all, na.rm=T)), col=\"black\", type=\"l\")\n\tlegend(\"bottom\", inset=.005, title=\"Tstats using hypervolume\", c(\"T_IP.IC\",\"T_IC.IR\",\"T_PC.PR\"), fill=col.Tstats, horiz=TRUE, cex=0.7, bty=\"n\")\n\t\n\t#________________________________________\n\t#plot : possible type = \"color_cond\", \"simple\", \"simple_range\", \"normal\" and \"barplot\"\t\n\t\n\t#__________\n\tif(type==\"color_cond\"){\n\t\t\n\t\tif(length(col.Tstats)==3) {col.Tstats[4:6]<-\"grey\"} \n\t\tif(length(col.Tstats)!=6) {print(\"Warnings: plot type color_cond need 3 or 6 colors in the argument col.Tstats\")}\t\t\n\t\t\n\t\tpoints(ses.T_IP.IC, rep(t*4, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[4])\n\t\tpoints(ses.T_IC.IR, rep(t*4+1, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[5])\n\t\tpoints(ses.T_PC.PR, rep(t*4+2, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[6])\n\t\t\n\t\tpoints(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\n\t\tpoints(ses.T_IP.IC[cond.T_IP.IC.inf], rep(t*4,times=length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])),pch=16, col=col.Tstats[1])\n\t\tpoints(ses.T_IC.IR[cond.T_IC.IR.inf], rep(t*4+1,times=length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])), pch=16, col=col.Tstats[2])\n\t\tpoints(ses.T_PC.PR[cond.T_PC.PR.inf], rep(t*4+2, times=length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])), pch=16, col=col.Tstats[3])\n\t\t\n\t\tpoints(ses.T_IP.IC[cond.T_IP.IC.sup], rep(t*4,times=length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])), pch=16, col=col.Tstats[1])\n\t\tpoints(ses.T_IC.IR[cond.T_IC.IR.sup], rep(t*4+1,times=length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])), pch=16, col=col.Tstats[2])\n\t\tpoints(ses.T_PC.PR[cond.T_PC.PR.sup], rep(t*4+2, times=length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])), pch=16, col=col.Tstats[3])\n\t\t\n\t\tif (length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])>0) \t{text(ses.T_IP.IC[cond.T_IP.IC.inf], rep(t*4-2,times=length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.inf], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}\n\t\tif (length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])>0) \t{text(ses.T_IC.IR[cond.T_IC.IR.inf], rep(t*4,times=length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.inf], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}\n\t\tif (length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])>0) \t{text(ses.T_PC.PR[cond.T_PC.PR.inf], rep(t*4+4, times=length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.inf], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}\n\t\t\n\t\tif (length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])>0) \t{text(ses.T_IP.IC[cond.T_IP.IC.sup], rep(t*4-2,times=length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.sup], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}\n\t\tif (length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])>0) \t{text(ses.T_IC.IR[cond.T_IC.IR.sup], rep(t*4,times=length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.sup], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}\n\t\tif (length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])>0) \t{text(ses.T_PC.PR[cond.T_PC.PR.sup], rep(t*4+4, times=length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.sup], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}\n\t\t\n\t}\n\n\t#__________\n\telse if(type==\"simple\"){\n\t\t\t\t\n\t\tpoints(ses.T_IP.IC, rep(t*4, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[1])\n\t\tpoints(ses.T_IC.IR, rep(t*4+1, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[2])\n\t\tpoints(ses.T_PC.PR, rep(t*4+2, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[3])\n\t\t\n\t\tpoints(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\n\t\tpoints(mean(ses.T_IP.IC.sup, na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR.sup, na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR.sup, na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\n\t\t\n\t\tpoints(mean(ses.T_IP.IC.inf, na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR.inf, na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR.inf, na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\t\n\t\t\n\t}\n\t\n\t#__________\n\telse if(type==\"simple_range\"){\n\t\t\n\t\tpoints(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\n\t\tsegments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tsegments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\tsegments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\t\t\n\t\tpoints(mean(ses.T_IP.IC.sup, na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR.sup, na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR.sup, na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\n\t\t\n\t\tpoints(mean(ses.T_IP.IC.inf, na.rm=T), t*4, pch=\"|\", col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR.inf, na.rm=T), t*4+1,pch=\"|\", col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR.inf, na.rm=T), t*4+2, pch=\"|\", col=col.Tstats[3])\t\n\t\t\n\t}\n\t\n\t#__________\n\telse if(type==\"normal\"){\n\t\t\n\t\tpoints(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tpoints(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])\n\t\tpoints(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\t\t\n\t\t\n\t\tsegments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\tsegments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\tsegments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n   \n\t\tpoints(min(ses.T_IP.IC, na.rm=T), t*4, pch=\"*\", col=col.Tstats[1])\n\t\tpoints(min(ses.T_IC.IR, na.rm=T), t*4+1,pch=\"*\", col=col.Tstats[2])\n\t\tpoints(min(ses.T_PC.PR, na.rm=T), t*4+2, pch=\"*\", col=col.Tstats[3])\n\t\t\n\t\tpoints(max(ses.T_IP.IC, na.rm=T), t*4, pch=\"*\", col=col.Tstats[1])\n\t\tpoints(max(ses.T_IC.IR, na.rm=T), t*4+1,pch=\"*\", col=col.Tstats[2])\n\t\tpoints(max(ses.T_PC.PR, na.rm=T), t*4+2, pch=\"*\", col=col.Tstats[3])\n\t\t\n\t\n\t\tif(add.conf==T){\n\t\t\tpoints(mean(ses.T_IP.IC.sup, na.rm=T), (1:1)*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.sup, na.rm=T), (1:1)*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.sup, na.rm=T), (1:1)*4+2, type=\"l\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.inf, na.rm=T), (1:1)*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.inf, na.rm=T), (1:1)*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.inf, na.rm=T), (1:1)*4+2, type=\"l\", col=col.Tstats[3])  \n\t\t}\t\n\t\telse {}\n\t}\n\n\t#__________\n\telse if(type==\"barplot\"){\n\t\n\t\tfor(t in 1:1){\n\t\t\n\t\t\tsegments(mean(ses.T_IP.IC, na.rm=T), t*4  , 0, t*4, pch=17, col=col.Tstats[1], lwd=8)\n\t\t\tsegments(mean(ses.T_IC.IR, na.rm=T), t*4+1, 0, t*4+1, pch=17, col=col.Tstats[2], lwd=8)\n\t\t\tsegments(mean(ses.T_PC.PR, na.rm=T), t*4+2, 0, t*4+2, pch=17, col=col.Tstats[3], lwd=8)\n\t\t\t\n\t\t\tsegments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])\n\t\t\tsegments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])\n\t\t\tsegments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])\n\n\t\t\tabline(a=t*4+3,b=0, lty=4, lwd=0.2)\n\t\t}\n\t\t\n\t\tif(add.conf==T){\n\t\t\tpoints(mean(ses.T_IP.IC.sup, na.rm=T), (1:1)*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.sup, na.rm=T), (1:1)*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.sup, na.rm=T), (1:1)*4+2, type=\"l\", col=col.Tstats[3])\n\t\t\t\n\t\t\tpoints(mean(ses.T_IP.IC.inf, na.rm=T), (1:1)*4, type=\"l\", col=col.Tstats[1])\n\t\t\tpoints(mean(ses.T_IC.IR.inf, na.rm=T), (1:1)*4+1, type=\"l\", col=col.Tstats[2])\n\t\t\tpoints(mean(ses.T_PC.PR.inf, na.rm=T), (1:1)*4+2, type=\"l\", col=col.Tstats[3])  \n\t\t}\n\t\telse {}\n\t}\n\telse{print(paste(\"Error:\",type,\"is not a valid type of plot\"))}\n\t\n\tpar(mar=c(5, 4, 4, 2) + 0.1) #return to default parameter\n}\n",
    "created" : 1392714744862.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "144044536",
    "id" : "21D07B3",
    "lastKnownWriteTime" : 1392734744,
    "path" : "C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats/function_Tstats_hv.r",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}