if(type=="color_cond"){
if(length(col.Tstats)==3) {col.Tstats[4:6]<-"grey"}
if(length(col.Tstats)!=6) {print("Warnings: plot type color_cond need 3 or 6 colors in the argument col.Tstats")}
points(ses.T_IP.IC, rep(t*4, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[4])
points(ses.T_IC.IR, rep(t*4+1, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[5])
points(ses.T_PC.PR, rep(t*4+2, times=dim(tstats$T_IP.IC)[1]), pch=20, col=col.Tstats[6])
points(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
points(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])
points(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
points(ses.T_IP.IC[cond.T_IP.IC.inf], rep(t*4,times=length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])),pch=16, col=col.Tstats[1])
points(ses.T_IC.IR[cond.T_IC.IR.inf], rep(t*4+1,times=length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])), pch=16, col=col.Tstats[2])
points(ses.T_PC.PR[cond.T_PC.PR.inf], rep(t*4+2, times=length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])), pch=16, col=col.Tstats[3])
points(ses.T_IP.IC[cond.T_IP.IC.sup], rep(t*4,times=length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])), pch=16, col=col.Tstats[1])
points(ses.T_IC.IR[cond.T_IC.IR.sup], rep(t*4+1,times=length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])), pch=16, col=col.Tstats[2])
points(ses.T_PC.PR[cond.T_PC.PR.sup], rep(t*4+2, times=length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])), pch=16, col=col.Tstats[3])
if (length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])>0) 	{text(ses.T_IP.IC[cond.T_IP.IC.inf], rep(t*4-2,times=length(ses.T_IP.IC.inf[cond.T_IP.IC.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.inf], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}
if (length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])>0) 	{text(ses.T_IC.IR[cond.T_IC.IR.inf], rep(t*4,times=length(ses.T_IC.IR.inf[cond.T_IC.IR.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.inf], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}
if (length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])>0) 	{text(ses.T_PC.PR[cond.T_PC.PR.inf], rep(t*4+4, times=length(ses.T_PC.PR.inf[cond.T_PC.PR.inf])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.inf], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}
if (length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])>0) 	{text(ses.T_IP.IC[cond.T_IP.IC.sup], rep(t*4-2,times=length(ses.T_IP.IC.sup[cond.T_IP.IC.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_IP.IC.sup], cex=0.6, srt=45, col=col.Tstats[1], pos=3)}
if (length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])>0) 	{text(ses.T_IC.IR[cond.T_IC.IR.sup], rep(t*4,times=length(ses.T_IC.IR.sup[cond.T_IC.IR.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_IC.IR.sup], cex=0.6, srt=45, col=col.Tstats[2], pos=2)}
if (length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])>0) 	{text(ses.T_PC.PR[cond.T_PC.PR.sup], rep(t*4+4, times=length(ses.T_PC.PR.sup[cond.T_PC.PR.sup])), labels=rownames(tstats$T_IP.IC)[cond.T_PC.PR.sup], cex=0.6, srt=45, col=col.Tstats[3], pos=1)}
}
points(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
points(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])
points(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
segments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
segments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])
segments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
points(min(ses.T_IP.IC, na.rm=T), t*4, pch="*", col=col.Tstats[1])
points(min(ses.T_IC.IR, na.rm=T), t*4+1,pch="*", col=col.Tstats[2])
points(min(ses.T_PC.PR, na.rm=T), t*4+2, pch="*", col=col.Tstats[3])
points(max(ses.T_IP.IC, na.rm=T), t*4, pch="*", col=col.Tstats[1])
points(max(ses.T_IC.IR, na.rm=T), t*4+1,pch="*", col=col.Tstats[2])
points(max(ses.T_PC.PR, na.rm=T), t*4+2, pch="*", col=col.Tstats[3])
if(add.conf==T){
points(colMeans(ses.T_IP.IC.sup, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(colMeans(ses.T_IC.IR.sup, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(colMeans(ses.T_PC.PR.sup, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
points(colMeans(ses.T_IP.IC.inf, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(colMeans(ses.T_IC.IR.inf, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(colMeans(ses.T_PC.PR.inf, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
}
points(mean(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
points(mean(ses.T_IC.IR, na.rm=T), t*4+1,pch=17, col=col.Tstats[2])
points(mean(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
segments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
segments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])
segments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
points(min(ses.T_IP.IC, na.rm=T), t*4, pch="*", col=col.Tstats[1])
points(min(ses.T_IC.IR, na.rm=T), t*4+1,pch="*", col=col.Tstats[2])
points(min(ses.T_PC.PR, na.rm=T), t*4+2, pch="*", col=col.Tstats[3])
points(max(ses.T_IP.IC, na.rm=T), t*4, pch="*", col=col.Tstats[1])
points(max(ses.T_IC.IR, na.rm=T), t*4+1,pch="*", col=col.Tstats[2])
points(max(ses.T_PC.PR, na.rm=T), t*4+2, pch="*", col=col.Tstats[3])
if(add.conf==T){
points(mean(ses.T_IP.IC.sup, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(mean(ses.T_IC.IR.sup, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(mean(ses.T_PC.PR.sup, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
points(mean(ses.T_IP.IC.inf, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(mean(ses.T_IC.IR.inf, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(mean(ses.T_PC.PR.inf, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
}
ses.T_PC.PR.sup
for(t in 1:1){
segments(mean(ses.T_IP.IC, na.rm=T), t*4  , 0, t*4, pch=17, col=col.Tstats[1], lwd=8)
segments(mean(ses.T_IC.IR, na.rm=T), t*4+1, 0, t*4+1, pch=17, col=col.Tstats[2], lwd=8)
segments(mean(ses.T_PC.PR, na.rm=T), t*4+2, 0, t*4+2, pch=17, col=col.Tstats[3], lwd=8)
segments(mean(ses.T_IP.IC, na.rm=T)+sd(ses.T_IP.IC, na.rm=T), t*4, mean(ses.T_IP.IC, na.rm=T)-sd(ses.T_IP.IC, na.rm=T), t*4, pch=17, col=col.Tstats[1])
segments(mean(ses.T_IC.IR, na.rm=T)+sd(ses.T_IC.IR, na.rm=T), t*4+1, mean(ses.T_IC.IR, na.rm=T)-sd(ses.T_IC.IR, na.rm=T), t*4+1, pch=17, col=col.Tstats[2])
segments(mean(ses.T_PC.PR, na.rm=T)+sd(ses.T_PC.PR, na.rm=T), t*4+2, mean(ses.T_PC.PR, na.rm=T)-sd(ses.T_PC.PR, na.rm=T), t*4+2, pch=17, col=col.Tstats[3])
abline(a=t*4+3,b=0, lty=4, lwd=0.2)
}
if(add.conf==T){
points(mean(ses.T_IP.IC.sup, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(mean(ses.T_IC.IR.sup, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(mean(ses.T_PC.PR.sup, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
points(mean(ses.T_IP.IC.inf, na.rm=T), (1:1)*4, type="l", col=col.Tstats[1])
points(mean(ses.T_IC.IR.inf, na.rm=T), (1:1)*4+1, type="l", col=col.Tstats[2])
points(mean(ses.T_PC.PR.inf, na.rm=T), (1:1)*4+2, type="l", col=col.Tstats[3])
}
res.hv<-Tstats.hv(Ttraits,ind.plot.finch,Tsp, nperm=15, Warnings=F)
ses(res.hv$T_IP.IC, res.hv$T_IP.IC_nm)
res.hv$T_IP.IC
rowMeans(res.hv$T_IP.IC_nm)
colMeans(res.hv$T_IP.IC_nm)
apply(res.hv$T_IP.IC_nm, 2, var)
?var
plot(res.hv)
ses(res.hv$T_IC.IR, res.hv$T_IC.IR_nm)
ses(res.hv$T_PC.PR, res.hv$T_PC.PR_nm)
res.hv$T_PC.PR_nm
res.hv$T_IC.IR_nm
res.hv$T_IC.IR
ses(res.hv$T_IC.IR, res.hv$T_IC.IR_nm)
ses(res.hv$T_PC.PR, res.hv$T_PC.PR_nm)
res.hv<-Tstats.hv(Ttraits,ind.plot.finch,Tsp, nperm=50, Warnings=F)
ses(res.hv$T_IP.IC, res.hv$T_IP.IC_nm)
ses(res.hv$T_IC.IR, res.hv$T_IC.IR_nm)
ses(res.hv$T_PC.PR, res.hv$T_PC.PR_nm)
res.hv$T_PC.PR
res.hv$T_PC.PR_nm
res.hv$T_IP.IC
res.hv$T_PC.PR
res.hv$T_PC.PR_nm
ses(res.hv$T_PC.PR, res.hv$T_PC.PR_nm)
colMeans(res.hv$T_PC.PR_nm)
1/colMeans(res.hv$T_PC.PR_nm)
apply(res.hv$T_PC.PR_nm, 2, sd)
apply(res.hv$T_PC.PR_nm, 2, var)
for (t in 1: ncol(Ttraits)){
Ttraits.nm3[[t]]<-list()
for(s in 1:  nlevels(Tind_plot)){
Ttraits.nm3[[t]][[s]]<-list()
for(i in 1:nperm){
perm_ind_plot3<-sample(Ttraits_by_pop, table(Tind_plot)[s])
Ttraits.nm3[[t]][[s]][[i]]<-perm_ind_plot3
}
}
if(printprogress==T){print(paste(round(66.6+t/ncol(Ttraits)/3*100, 2),"%"))} else {}
}
Ttraits.nm3[[t]][[s]][[i]]
Ttraits.nm3[[t]][[s]][[1]]
Ttraits.nm3[[t]][[s]][[2]]
mean(Ttraits.nm3[[t]][[s]][[2]])
mean(Ttraits.nm3[[t]][[s]][[3]])
mean(Ttraits.nm3[[t]][[s]][[1]])
yy<-length(names_sp_ind_plot)
for (t in 1: ncol(Ttraits)){
for(i in 1:nperm){
mean_IP_nm3[i,t,]<-as.vector(tapply(unlist(Ttraits.nm3[[t]])[(1+(i-1)*yy) : (i*yy)], names_sp_ind_plot  ,function(x) mean(x, na.rm=T)))
mean_PC_nm3[i,t,]<-as.vector(tapply(mean_IP_nm3[i,t,], Tplotsp, mean, na.rm=T))
}
}
for(i in 1:nperm){
var_IP_nm1[i,]<-by(t(array(unlist(Ttraits.nm1),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), names_sp_ind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_IC_nm1[i,]<-by(t(array(unlist(Ttraits.nm1),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_IC_nm2[i,]<-by(t(array(unlist(Ttraits.nm2),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PR_nm3[i]<-hypervolume(mean_IP_nm3[i,,], reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
var_IR_nm2[i]<-hypervolume(t(array(unlist(Ttraits.nm2),dim=c(ncol(Ttraits), nperm, length(names_sp_ind_plot)))[,i,]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
if(printprogress==T){print(paste(round(i/nperm, 2),"%"))} else {}
}
for(i in 1:nperm){
for(s in 1 : nlevels(Tind_plot)){
T_IP.IC_nm1[i,s]<-mean(var_IP_nm1[i,grepl(levels(Tind_plot)[s],Tplotsp)], na.rm=T)/var_IC_nm1[i,s]
T_IC.IR_nm2[i,s]<-var_IC_nm2[i,s]/var_IR_nm2[i]
T_PC.PR_nm3[i,s]<-var_PC_nm3[i,s]/var_PR_nm3[i]
}
}
T_PC.PR_nm3
var_PC_nm3
var_PR_nm3
var_PC
mean_IP_nm3[,,1]
mean_IP_nm3[,,2]
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PC_nm3[i,]
i=5
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
i=1
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
i=2
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PC_nm3[i,]
var_PC_nm3[2,]
t(mean_IP_nm3[i,,])
t(mean_IP_nm3[1,,])
t(mean_IP_nm3[i,,])
t(mean_IP_nm3[1,,])
var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
Tplotsp
var_PC_nm3[i,]
var_PC_nm3[1,]
var_PC_nm3[2,]
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[,2,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[,1,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
dim(mean_IP_nm3)
mean_IP_nm3[1,,]
mean_IP_nm3[2,,]
summary(mean_IP_nm3[2,,])
summary(t(mean_IP_nm3[2,,]))
summary(t(mean_IP_nm3[3,,]))
summary(t(mean_IP_nm3[1,,]))
summary(t(mean_IP_nm3[2,,]))
hypervolume(t(mean_IP_nm3[2,,]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[1,,]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[1,,][Tplotsp==levels(Tplotsp)[1],,]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(Tplotsp)[1],]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[1,,][,,Tplotsp==levels(Tplotsp)[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
t(mean_IP_nm3[1,,][,,Tplotsp==levels(Tplotsp)[1]])
hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(Tplotsp)[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
t(mean_IP_nm3[1,,][,Tplotsp==levels(Tplotsp)[1]])
Tplotsp==levels(Tplotsp)[1]]
Tplotsp==levels(Tplotsp)[1]
levels(Tplotsp)[1]
hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
hypervolume(t(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res1<-hypervolume(t(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res2<-hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
plot(res1)
plot(res2)
plot(res2,res1)
?plot.hypervolume
??plot.hypervolume
plot.Hypervolume(res.hv$T_IP.IC)
mean_IP_nm3[1,,]
mean_IP_nm3[2,,]
boxplot(c(mean_IP_nm3[2,,], mean_IP_nm3[2,,]))
boxplot(mean_IP_nm3[2,,], mean_IP_nm3[2,,])
boxplot(as.vector(mean_IP_nm3[2,,]), as.vector(mean_IP_nm3[2,,]))
colSums(mean_IP_nm3[1,,])
colSums(mean_IP_nm3[2,,])
rowSums(mean_IP_nm3[2,,])
rowSums(mean_IP_nm3[1,,])
boxplot(as.vector(mean_IP_nm3[2,,]), as.vector(mean_IP_nm3[1,,]))
hypervolume(mean_IP_nm3[2,,])
res2<-hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res1<-hypervolume(t(mean_IP_nm3[1,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res2<-hypervolume(t(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]]), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res2
res2@Volume
res1@Volume
?hypervolum
?hypervolume
data(iris)
hv1 = hypervolume(subset(iris, Species=="setosa")[,1:4],reps=1000,bandwidth=0.2)
summary(hv1)
summary(res2)
summary(res1)
res2<-hypervolume(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]], reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
res1<-hypervolume(mean_IP_nm3[2,,][,Tplotsp==levels(as.factor(Tplotsp))[1]], reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)
summary(res1)
summary(res2)
for(i in 1:nperm){}
for(i in 1:nperm){var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)}
var_PC_nm3
for(i in 1:nperm){var_PC_nm3[i,]<-by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(t(x), reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)}
var_PC_nm3
names_sp_ind_plot<-as.factor(paste(Tsp, Tind_plot, sep="@"))
Tplotsp=unlist(strsplit(levels(names_sp_ind_plot),split="@"))[2*(1:nlevels(names_sp_ind_plot))]; names(Tplotsp)=levels(names_sp_ind_plot);
#Tplotsp is the plot in wich the population is
Tplotsp
as.vector(Tplotsp)
dim(mean_IP_nm3)
mean_PC
mean_IP<-aggregate(Ttraits, list(names_sp_ind_plot), mean, na.rm=T)[,-1]
mean_IP
for (t in 1: ncol(Ttraits)){
mean_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot  ,mean, na.rm=T)
mean_PC[,t]<-tapply(mean_IP[,t], Tplotsp , mean, na.rm=T)
var_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot, var, na.rm=T)
var_PC[,t]<-tapply(mean_IP[,t], Tplotsp  ,var, na.rm=T)
var_CR[t]<-var(mean_PC[,t], na.rm=T)
var_IC[,t]<-tapply(Ttraits[,t], Tind_plot  ,var, na.rm=T)
var_PR[t]<-var(as.vector(mean_IP[,t]), na.rm=T)
var_IR[t]<-var(Ttraits[,t], na.rm=T)
for(s in 1 : nlevels(Tind_plot)){
T_IP.IC[s,t]<-mean(var_IP[grepl(levels(Tind_plot)[s],Tplotsp),t], na.rm=T)/var_IC[s,t]
T_IC.IR[s,t]<-var_IC[s,t]/var_IR[t]
T_PC.PR[s,t]<-var_PC[s,t]/var_PR[t]
}
}
for (t in 1: 4){
mean_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot  ,mean, na.rm=T)
mean_PC[,t]<-tapply(mean_IP[,t], Tplotsp , mean, na.rm=T)
var_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot, var, na.rm=T)
var_PC[,t]<-tapply(mean_IP[,t], Tplotsp  ,var, na.rm=T)
var_CR[t]<-var(mean_PC[,t], na.rm=T)
var_IC[,t]<-tapply(Ttraits[,t], Tind_plot  ,var, na.rm=T)
var_PR[t]<-var(as.vector(mean_IP[,t]), na.rm=T)
var_IR[t]<-var(Ttraits[,t], na.rm=T)
for(s in 1 : nlevels(Tind_plot)){
T_IP.IC[s,t]<-mean(var_IP[grepl(levels(Tind_plot)[s],Tplotsp),t], na.rm=T)/var_IC[s,t]
T_IC.IR[s,t]<-var_IC[s,t]/var_IR[t]
T_PC.PR[s,t]<-var_PC[s,t]/var_PR[t]
}
}
nlevels(Tind_plot)
for (t in 1: 4){
mean_IP[,t]<-tapply(Ttraits[,t], names_sp_ind_plot  ,mean, na.rm=T)
mean_PC[,t]<-tapply(mean_IP[,t], Tplotsp , mean, na.rm=T)
}
mean_IP
mean_PC
var_IP<-by(Ttraits, names_sp_ind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PC<-by(mean_IP, Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
#var_CR<-hypervolume(mean_PC, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
var_IC<-by(Ttraits, Tind_plot, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
var_PR<-hypervolume(mean_IP, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
var_IR<-hypervolume(Ttraits, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume
for(s in 1 : nlevels(Tind_plot)){
T_IP.IC[s]<-mean(var_IP[grepl(levels(Tind_plot)[s],Tplotsp)], na.rm=T)/var_IC[s]
T_IC.IR[s]<-var_IC[s]/var_IR
T_PC.PR[s]<-var_PC[s]/var_PR
}
T_IP.IC
T_IC.IR
T_PC.PR
T_PC.PR_nm
T_PC.PR_mn*
T_PC.PR_mn
T_PC.PR_nm3
Ttraits_by_sp<-apply(Ttraits,2,function(x) tapply(x,names_sp_ind_plot,mean))
Ttraits_by_pop<-Ttraits_by_sp[match(names_sp_ind_plot,rownames(Ttraits_by_sp)),]
Ttraits_by_sp
Ttraits_by_pop
Ttraits_by_sp
Ttraits_by_sp<-aggregate(Ttraits, by = list(names_sp_ind_plot), mean, na.rm = T)[,-1]
Ttraits_by_sp
for (t in 1: ncol(Ttraits)){
Ttraits.nm3[[t]]<-list()
for(s in 1:  nlevels(Tind_plot)){
Ttraits.nm3[[t]][[s]]<-list()
for(i in 1:nperm){
perm_ind_plot3<-sample(Ttraits_by_pop, table(Tind_plot)[s])
Ttraits.nm3[[t]][[s]][[i]]<-perm_ind_plot3
}
}
if(printprogress==T){print(paste(round(66.6+t/ncol(Ttraits)/3*100, 2),"%"))} else {}
}
Ttraits.nm3[[1]]
Ttraits.nm3[[2]]
mean_IP_nm3
mean_IP_nm3[1,,]
mean_IP_nm3[,1,]
rowSums(mean_IP_nm3[,1,])
rowSums(mean_IP_nm3[,,1])
rowSums(mean_IP_nm3[,,2])
rowSums(mean_IP_nm3[1,,])
rowSums(mean_IP_nm3[2,,])
colSums(mean_IP_nm3[2,,])
colSums(mean_IP_nm3[1,,])
sum(mean_IP_nm3[1,,])
sum(mean_IP_nm3[2,,])
by(t(mean_IP_nm3[i,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings, quantile=0.1)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings, quantile=0.1)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings, quantile=0.5)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings, quantile=0.5)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=bandwidth, verbose=F, warnings=Warnings, quantile=0.9)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=0.1, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=reps, bandwidth=0.1, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[1,,]), Tplotsp, function(x) hypervolume(x, reps=100000, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
by(t(mean_IP_nm3[2,,]), Tplotsp, function(x) hypervolume(x, reps=100000, bandwidth=bandwidth, verbose=F, warnings=Warnings)@Volume)
require(mice)
Ttraits<-ind.traits[,TR]
# read in data
ind  <- read.csv("~/Documents/cours svtue/2-Master/Stage_VarIntra/Donnees/ind.csv", header=T, sep = ";", dec=".")
leaf <- read.csv("~/Documents/cours svtue/2-Master/Stage_VarIntra/Donnees/traits.csv", header=T, sep = "\t", dec=".")
tax  <- read.csv("~/Documents/cours svtue/2-Master/Stage_VarIntra/Donnees/tax.csv", header=T, sep = "\t", dec=".")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_CVNND.R')
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_Tstats.r')
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_variance.R')
#puis: lancer script BRIDGE trait prep script
#puis:
#distribution globale des traits sur feuilles
traits.leaf.selec<-c("chlor","thickness","log_toughness","log_SLA","log_dry_mass","log_lflt_area")
leaf.traits<-leaf[,which(names(leaf)%in%traits.leaf.selec)]
#distribution globale des traits sur individus
traits.ind.selec<-c( "stature", "Height", "chlor", "log_SLA", "thickness","log_tough","log_dry_mass","log_lflt_area","log_LTD","log_lf_area", "P","K","Na", "C_N", "N", "C","C13", "N15", "NO3", "NH4", "N2","Al","B","Ca","Cu","Fe","Mg","Mn","Mo","S","Zn","log_moist","sapwood_dens","bark_thick","twig_dens")
ind.traits<-ind[,which(names(ind)%in%traits.ind.selec)]
ind.traits$B[ind.traits$B==""]<-NA
ind.traits$B<-as.numeric(as.vector(ind.traits$B))
ind.traits$Zn[ind.traits$Zn==""]<-NA
ind.traits$Zn<-as.numeric(as.vector(ind.traits$Zn))
#add LDMC in leaf trait
#ind.traits<-cbind(ind.traits[1:35],1/(ind.traits$thickness*ind.traits$log_SLA))
#colnames(ind.traits)[36]<-"LDMC"
#s?lection des traits individus les plus int?ressants
traits.ind.selection<-c( "stature", "Height", "chlor", "log_SLA", "thickness","log_tough","log_dry_mass","log_lflt_area","log_LTD","log_lf_area", "P","K", "C_N", "N", "C","C13", "N15","log_moist","sapwood_dens","bark_thick","twig_dens")
TR<-match(traits.ind.selection,colnames(ind.traits))
#je remplace les -inf par des NA pour le log_lf_area
ind.traits[,29][!is.finite(ind.traits[,29])]<-NA
load("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/workspace propre Tstats_4.RData")
Ttraits<-ind.traits[,TR]
imp<-mice(Ttraits)
Ttraits<-complete(imp)
Tsp=paste(ind$Genus, ind$species, sep="_")
res.hv<-Tstats.hv(Ttraits,Tind_plot2,Tsp, nperm=5, Warnings=F)
res.hv<-Tstats.hv(Ttraits[1:1000,],Tind_plot2[1:1000],Tsp[1:1000], nperm=5, Warnings=F)
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats_hv.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
res.hv<-Tstats.hv(Ttraits[1:1000,],Tind_plot2[1:1000],Tsp[1:1000], nperm=5, Warnings=F)
res.hv<-Tstats.hv(Ttraits,ind.plot.finch,Tsp, nperm=50, Warnings=F)
Ttraits<-traits.finch[finch$IslandID!="Cocos",]
imp<-mice(Ttraits)
Ttraits<-complete(imp)
Tind_plot<-ind.plot.finch
Tsp<-Tsp.finch[finch$IslandID!="Cocos"]
nperm=2
printprogress=TRUE
p.value=TRUE
reps=1000
bandwidth=0.2
Warnings = T
res.hv<-Tstats.hv(Ttraits,ind.plot.finch,Tsp, nperm=50, Warnings=F)
Ttraits<-traits.finch[finch$IslandID!="Cocos",]
imp<-mice(Ttraits)
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats_hv.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 avec na.rm=T.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 modif.r")
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_CVNND.R')
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_Tstats.r')
source('~/Dropbox/3-THESE/Article T stats/Package Tstats/function_variance.R')
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Morph_for_Sato.csv", sep=";")
#attention il faut changer les virgule en "." dans le fichier texte enqui car sinon on obtient des facteurs pour certains traits avec des NA qui s'ajoutent lorsqu'on passe en as.numeric
traits.finch<-finch[,11:14]
Tsp.finch<-paste(finch[,4],finch[,5], sep="_")
ind.plot.finch<-as.factor(as.vector(finch$IslandID[finch$IslandID!="Cocos"]))
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Morph_for_Sato.csv", sep=";")
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
traits.finch<-finch[,11:14]
Tsp.finch<-paste(finch[,4],finch[,5], sep="_")
ind.plot.finch<-as.factor(as.vector(finch$IslandID[finch$IslandID!="Cocos"]))
require(mice)
Ttraits<-traits.finch[finch$IslandID!="Cocos",]
imp<-mice(Ttraits)
Ttraits<-complete(imp)
Tind_plot<-ind.plot.finch
Tsp<-Tsp.finch[finch$IslandID!="Cocos"]
nperm=2
printprogress=TRUE
p.value=TRUE
reps=1000
bandwidth=0.2
Warnings = T
res.hv<-Tstats.hv(Ttraits,ind.plot.finch,Tsp, nperm=10, Warnings=F)
ses(res.hv$T_IP.IC, res.hv$T_IP.IC_nm)
ses(res.hv$T_IC.IR, res.hv$T_IC.IR_nm)
ses(res.hv$T_PC.PR, res.hv$T_PC.PR_nm)
ses(res.hv$T_IP.IC, res.hv$T_IP.IC_nm)
data(finch)
finch
traits.finch<-finch[finch$IslandID!="Cocos",11:14]
finch$IslandID!="Cocos"
data(finch)
finch$IslandID
finch
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
finch
data(finch_ind)
finch_ind
data(finch_ind)
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
traits.finch<-finch_ind[finch_ind$IslandID!="Cocos",11:14]
finch.ind <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
traits.finch<-finch_ind[finch_ind$IslandID!="Cocos",11:14]
Tsp.finch<-paste(finch_ind[,4],finch_ind[,5], sep="_")[finch_ind$IslandID!="Cocos"]
ind.plot.finch<-as.factor(as.vector(finch_ind$IslandID[finch_ind$IslandID!="Cocos"]))
finch_ind <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
traits.finch<-finch_ind[finch_ind$IslandID!="Cocos",11:14]
Tsp.finch<-paste(finch_ind[,4],finch_ind[,5], sep="_")[finch_ind$IslandID!="Cocos"]
ind.plot.finch<-as.factor(as.vector(finch_ind$IslandID[finch_ind$IslandID!="Cocos"]))
patrvar(traits.finch, factors=c(Tsp.finch,ind.plot.finch) )
partvar(traits.finch, factors=c(Tsp.finch,ind.plot.finch) )
names_sp_ind_plot<-as.factor(paste(Tsp.finch[finch$IslandID!="Cocos"], finch$IslandID[finch$IslandID!="Cocos"], sep="_"))
names_sp_ind_plot
finch_ind <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
traits.finch<-finch_ind[finch_ind$IslandID!="Cocos",11:14]
Tsp.finch<-paste(finch_ind[,4],finch_ind[,5], sep="_")[finch_ind$IslandID!="Cocos"]
ind.plot.finch<-as.factor(as.vector(finch_ind$IslandID[finch_ind$IslandID!="Cocos"]))
names_sp_ind_plot<-as.factor(paste(Tsp.finch[finch$IslandID!="Cocos"], finch$IslandID[finch$IslandID!="Cocos"], sep="_"))
partvar(traits.finch, factors=c(Tsp.finch,ind.plot.finch) )
partvar(traits.finch, factors=c(Tsp.finch,names_sp_ind_plot) )
traits.finch
finch_ind$IslandID!="Cocos"
traits.finch<-finch_ind[finch_ind$IslandID!="Cocos",11:14]
dim(traits.finch)
partvar(traits.finch, factors=c(Tsp.finch,names_sp_ind_plot) )
Tsp.finch<-paste(finch_ind[,4],finch_ind[,5], sep="_")[finch_ind$IslandID!="Cocos"]
ind.plot.finch<-as.factor(as.vector(finch_ind$IslandID[finch_ind$IslandID!="Cocos"]))
names_sp_ind_plot<-as.factor(paste(Tsp.finch[finch$IslandID!="Cocos"], finch$IslandID[finch$IslandID!="Cocos"], sep="_"))
Tsp.finch
ind.plot.finch
names_sp_ind_plot
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 avec na.rm=T.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 modif.r")
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Morph_for_Sato.csv", sep=";")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
#attention il faut changer les virgule en "." dans le fichier texte enqui car sinon on obtient des facteurs pour certains traits avec des NA qui s'ajoutent lorsqu'on passe en as.numeric
traits.finch<-finch[finch$IslandID!="Cocos",11:14]
Tsp.finch<-as.factor(as.vector(paste(finch[finch$IslandID!="Cocos",4],finch[finch$IslandID!="Cocos",5], sep="_")))
ind.plot_finch<-as.factor(as.vector(finch$IslandID[finch$IslandID!="Cocos"]))
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 avec na.rm=T.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 modif.r")
finch <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/Morph_for_Sato.csv", sep=";")
#attention il faut changer les virgule en "." dans le fichier texte enqui car sinon on obtient des facteurs pour certains traits avec des NA qui s'ajoutent lorsqu'on passe en as.numeric
traits.finch<-finch[finch$IslandID!="Cocos",11:14]
Tsp.finch<-as.factor(as.vector(paste(finch[finch$IslandID!="Cocos",4],finch[finch$IslandID!="Cocos",5], sep="_")))
ind.plot_finch<-as.factor(as.vector(finch$IslandID[finch$IslandID!="Cocos"]))
plot.partvar<-as.factor(as.vector(ind.plot_finch))
sp.partvar<-as.factor(as.vector(Tsp.finch))
res.patrvar.finch<-partvar(traits=traits.finch, factors=cbind(plot.partvar, sp.partvar))
