library(cati)
library(cati)
library(cati)
res.Tstats<-Tstats(Ttraits=ind.traits[,TR], Tind_plot=Tind_plot2, Tsp=paste(ind$Genus, ind$species, sep="_"), nperm=999, printprogress=TRUE, p.value=TRUE)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch, nperm=99)
res.finch<-Tstats(traits.finch, ind_sites=ind.plot.finch, sp=sp.finch, nperm=99)
ind.plot.finch
traits.finch<-finch.ind[finch.ind$IslandID!="Cocos",11:14]
sp.finch<-as.factor(as.vector(paste(finch.ind[finch.ind$IslandID!="Cocos",4],finch.ind[finch.ind$IslandID!="Cocos",5], sep="_")))
ind.plot.finch<-as.factor(as.vector(finch.ind$IslandID[finch.ind$IslandID!="Cocos"]))
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_CVNND.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_Tstats.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_variance.R")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 avec na.rm=T.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Aiba et al 2013 modif.r")
source("C:/Users/taudiere/Dropbox/3-THESE/Article T stats/Package Tstats//function_com_multi.R")
finch.ind <- read.csv("C:/Users/taudiere/Dropbox/Analyses en cours/Tstats sur pinson/finch.ind.csv", sep=";")
#attention il faut changer les virgule en "." dans le fichier texte enqui car sinon on obtient des facteurs pour certains traits avec des NA qui s'ajoutent lorsqu'on passe en as.numeric
traits.finch<-finch.ind[finch.ind$IslandID!="Cocos",11:14]
sp.finch<-as.factor(as.vector(paste(finch.ind[finch.ind$IslandID!="Cocos",4],finch.ind[finch.ind$IslandID!="Cocos",5], sep="_")))
ind.plot.finch<-as.factor(as.vector(finch.ind$IslandID[finch.ind$IslandID!="Cocos"]))
res.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch, nperm=99)
library(cati)
data(finch.ind)
dim(finch.ind)
class(finch.ind)
class(finch)
dim(finch)
head(finch)
ind.plot.finch
ind.plot.finch,data(finch.ind)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
#Plot functions
plot.ses.Tstats(res.finch)
# Custom theme (from rasterVis package)
my.theme <- BuRdTheme()
# Customize the colorkey
my.ckey <- list(col=my.theme$regions$col)
levelplot(t(ses(res.finch$T_IP.IC,res.finch$T_IP.IC_nm)$ses), colorkey=my.ckey, par.settings=my.theme,border="black")
data(finch.ind)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot.finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
#Plot functions
plot.ses.Tstats(res.finch)
# Custom theme (from rasterVis package)
my.theme <- BuRdTheme()
# Customize the colorkey
my.ckey <- list(col=my.theme$regions$col)
levelplot(t(ses(res.finch$T_IP.IC,res.finch$T_IP.IC_nm)$ses), colorkey=my.ckey, par.settings=my.theme,border="black")
data(finch.ind)
ls()
library(cati)
dim(finch)
dim(finch.ind)
require(rasterVis)
library(cati)
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, pop.aggregate=F)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range,
mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean,
CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
plot.filter(index.list)
index.list
dim(index.list[[1]])
dim(index.list[[2]])
dim(index.list[[3]])
dim(index.list[[4]])
dim(index.list[[5]])
dim(index.list[[6]])
dim(index.list[[7]])
dim(index.list[[7]])res.finch.ind
res.finch.ind
res.finch.ind$range_obs
res.finch.ind$Range_obs
range.ind=res.finch.ind$Range_obs
range.ind
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=F)
res.finch.ind$Range_obs
library(cati)
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range,
mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean,
CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
plot.filter(index.list)
range.ind=res.finch.ind$Range_obs
range.ind
range.ind.null
res.finch.ind$Null_range
res.finch.ind$Null_mean
res.finch.ind$Mean_obs
plot.filter(index.list)
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_mn)
plot.filter(index.list)
plot.filter(list.ses)
plot.ses(list.ses)
plot.ses(list.list)
plot.ses(index.list)
plot.ses(index.list
index.list
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range,
mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean,
CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
res.finch$T_PC.PR_nm
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range,
mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean,
CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
index.list[[7]]
dim(index.list[[8]])
dim(index.list[[9]])
dim(index.list[[10]])
dim(index.list[[11]])
dim(index.list[[12]])
list.ses<-list( range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range, mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean, CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses)
plot.ses(c(list.ses, list.ses2))
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
list.ses2<-list( range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range, mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean, CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.ses(c(list.ses, list.ses2))
list.ses2<-list( range.ind=res.finch.ind$Range_obs, range.ind.null=res.finch.ind$Null_range, mean.ind=res.finch.ind$Mean_obs, mean.ind.null=res.finch.ind$Null_mean, CV.ind=res.finch.ind$CV.NND_obs, CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.filter(c(list.ses, list.ses2))
list.ses2<-list( range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range, mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean, CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.ses(c(list.ses, list.ses2))
plot.filter(c(list.ses, list.ses2))
plot.ses(c(list.ses, list.ses2))
library(cati)
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
list.ses2<-list( range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range, mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean, CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.ses(c(list.ses, list.ses2))
plot.filter(c(list.ses, list.ses2))
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
list.ses2<-list( range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range, mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean, CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.ses(c(list.ses, list.ses2))
plot.filter(c(list.ses, list.ses2))
library(cati)
plot.filter
plot.ses(c(list.ses, list.ses2))
plot.filter(c(list.ses, list.ses2))
dim(list.ses[[1]])
dim(list.ses[[5]])
dim(list.ses[[56]])
dim(list.ses[[6]])
dim(list.ses[[7]])
dim(list.ses[[8]])
dim(list.ses2[[6]])
dim(list.ses1[[6]])
dim(list.ses2[[1]])
dim(list.ses2[[2]])
class(list.ses2[[2]])
index.list<-list.ses2
namesindex.all<-names(index.list)
nindex<-length(names(index.list))/2
namesindex<-names(index.list)[seq(1,nindex*2, by=2)]
namestraits<-colnames(index.list[[1]])
namescommunity<-rownames(index.list[[1]])
ncom<-dim(index.list[[1]])[1]
ntr<-dim(index.list[[1]])[2]
res<-list()
for (i in seq(1,nindex*2, by=2)){
res[[eval(namesindex.all[i])]] <- ses(obs=index.list[[i]], nullmodel=index.list[[i+1]], val.quant=val.quant)
}
val.quant=c(0.025,0.975)
res<-list()
for (i in seq(1,nindex*2, by=2)){
res[[eval(namesindex.all[i])]] <- ses(obs=index.list[[i]], nullmodel=index.list[[i+1]], val.quant=val.quant)
}
res<-list()
for (i in seq(1,nindex*2, by=2)){
res[[eval(namesindex.all[i])]] <- ses(obs=index.list[i], nullmodel=index.list[i+1], val.quant=val.quant)
}
library(cati)
data(finch.ind)
#T-statistics
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
summary.Tstats(res.finch)
list.ses<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm, T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm, T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm)
plot.ses(list.ses)
#Others classicals index (mean, range, CV.NND and kurtosis). Use com.index function for custom function
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
list.ses2<-list( range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range, mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean, CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV)
plot.ses(list.ses2)
plot.ses(c(list.ses, list.ses2))
plot.filter(c(list.ses, list.ses2))
data(finch.ind)
sites.pop<-unlist(strsplit(rownames(res.finch.ind_mean_var.by.pop1$obs$mean), split=" "))[seq(2,2*length(rownames(res.finch.ind_mean_var.by.pop1$obs$mean)),by=2)]
apply(res.finch.ind_mean_var.by.pop1$obs$mean, 2, function(x) tapply(x, sites.pop, mean, na.rm=T)  )
res.finch.ind_mean_var.by.pop1<-com.index(traits=traits.finch, index=c("tapply(x, paste(sp.finch, ind.plot_finch), function(x) mean(x, na.rm=T))", "tapply(x, paste(sp.finch, ind.plot_finch), function(x) sd(x, na.rm=T))"), sp=sp.finch , nullmodels=c(1,1), ind.plot=ind.plot_finch, nperm=99, namesindex=c("mean_1","sd_1"))
ses(res.finch.ind_mean_var.by.pop1$obs$mean, res.finch.ind_mean_var.by.pop1$Null$mean)$ses
plot.ses(res.finch.ind_mean_var.by.pop1$list.index)
sites.pop<-unlist(strsplit(rownames(res.finch.ind_mean_var.by.pop1$obs$mean), split=" "))[seq(2,2*length(rownames(res.finch.ind_mean_var.by.pop1$obs$mean)),by=2)]
apply(res.finch.ind_mean_var.by.pop1$obs$mean, 2, function(x) tapply(x, sites.pop, mean, na.rm=T)  )
ses(apply(res.finch.ind_mean_var.by.pop1$obs$mean, 2, function(x) tapply(x, sites.pop, mean, na.rm=T)), apply(res.finch.ind_mean_var.by.pop1$Null$mean, c(1,3), function(x) tapply(x, sites.pop, mean, na.rm=T)  ))
plot.ses(list(Mean.by.pop_obs=apply(res.finch.ind_mean_var.by.pop1$obs$mean, 2, function(x) tapply(x, sites.pop, mean, na.rm=T)), Mean.by.pop_Null=apply(res.finch.ind_mean_var.by.pop1$Null$mean, c(1,3), function(x) tapply(x, sites.pop, mean, na.rm=T)  ), sd.by.pop_obs=apply(res.finch.ind_mean_var.by.pop1$obs$sd, 2, function(x) tapply(x, sites.pop, mean, na.rm=T)), sd.by.pop_Null=apply(res.finch.ind_mean_var.by.pop1$Null$sd, c(1,3), function(x) tapply(x, sites.pop, mean, na.rm=T)  )  ) )
?mean
data(finch.ind)
#Calcul using individuals values
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate = FALSE)
#Calcul using populational values
res.finch.sp<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate = TRUE)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites = TRUE )
plot.com(res.finch.ind)
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites = FALSE )
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites = T)
data(finch.ind)
#Calcul using individuals values
res.finch.ind<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=FALSE)
#Calcul using populational values
res.finch.sp<-com.index.c(traits=traits.finch, ind.plot=ind.plot_finch, nperm=99, sp=sp.finch, pop.aggregate=TRUE)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites=TRUE )
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites=TRUE )
plot.filter.c(com.object.ind=res.finch.ind, com.object.sp=res.finch.sp, tstats=res.finch, val.quant=c(0.025, 0.975), bysites=F )
data(finch.ind)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
res.finch.sp<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = TRUE)
res.finch.ind<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = FALSE)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range,
mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean,
CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV,
kurtosis.ind=t(res.finch.ind$kurtosis_obs), kurtosis.ind.null=res.finch.ind$Null_kurtosis,
range.sp=t(res.finch.sp$Range_obs), range.sp.null=res.finch.sp$Null_range,
mean.sp=t(res.finch.sp$Mean_obs), mean.sp.null=res.finch.sp$Null_mean,
CV.sp=t(res.finch.sp$CV.NND_obs), CV.sp.null=res.finch.sp$Null_CV,
kurtosis.sp=t(res.finch.sp$kurtosis_obs), kurtosis.sp.null=res.finch.sp$Null_kurtosis)
plot.filter(index.list)
plot.filter(list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm))
plot.filter(list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm), bysites=FALSE)
library(cati)
data(finch.ind)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
res.finch.sp<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = TRUE)
res.finch.ind<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = FALSE)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range,
mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean,
CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV,
kurtosis.ind=t(res.finch.ind$kurtosis_obs), kurtosis.ind.null=res.finch.ind$Null_kurtosis,
range.sp=t(res.finch.sp$Range_obs), range.sp.null=res.finch.sp$Null_range,
mean.sp=t(res.finch.sp$Mean_obs), mean.sp.null=res.finch.sp$Null_mean,
CV.sp=t(res.finch.sp$CV.NND_obs), CV.sp.null=res.finch.sp$Null_CV,
kurtosis.sp=t(res.finch.sp$kurtosis_obs), kurtosis.sp.null=res.finch.sp$Null_kurtosis)
plot.filter(index.list)
plot.ses(index.list)
plot.ses.var(index.list, table(ind.plot_finch))
data(finch.ind)
res.finch<-Tstats(traits.finch, ind_plot=ind.plot_finch, sp=sp.finch, nperm=99)
res.finch.sp<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = TRUE)
res.finch.ind<-com.index.c(traits = traits.finch, ind.plot = ind.plot_finch, nperm = 99, sp = sp.finch, pop.aggregate = FALSE)
index.list<-list(T_IP.IC=res.finch$T_IP.IC, T_IP.IC_nm=res.finch$T_IP.IC_nm,
T_IC.IR=res.finch$T_IC.IR, T_IC.IR_nm=res.finch$T_IC.IR_nm,
T_PC.PR=res.finch$T_PC.PR, T_PC.PR_nm=res.finch$T_PC.PR_nm,
range.ind=t(res.finch.ind$Range_obs), range.ind.null=res.finch.ind$Null_range,
mean.ind=t(res.finch.ind$Mean_obs), mean.ind.null=res.finch.ind$Null_mean,
CV.ind=t(res.finch.ind$CV.NND_obs), CV.ind.null=res.finch.ind$Null_CV,
kurtosis.ind=t(res.finch.ind$kurtosis_obs), kurtosis.ind.null=res.finch.ind$Null_kurtosis,
range.sp=t(res.finch.sp$Range_obs), range.sp.null=res.finch.sp$Null_range,
mean.sp=t(res.finch.sp$Mean_obs), mean.sp.null=res.finch.sp$Null_mean,
CV.sp=t(res.finch.sp$CV.NND_obs), CV.sp.null=res.finch.sp$Null_CV,
kurtosis.sp=t(res.finch.sp$kurtosis_obs), kurtosis.sp.null=res.finch.sp$Null_kurtosis)
library(cati)
plot.ses.var(index.list, table(ind.plot_finch))
plot.ses.var(index.list, table(ind.plot_finch), resume=TRUE)
library(cati)
library(cati)
library(cati)
library(cati)
rstudio::diagnosticsReport()
pdflatex
$pdflatex
RSTUDIO_PDFLATEX
RSTUDIO_PDFLATEX("latex")
rstudio::diagnosticsReport()
library("rstudio", lib.loc="C:/Program Files/R/R-3.0.2/library")
RSTUDIO_PDFLATEX("latex")
rstudio::diagnosticsReport()
rstudio::diagnosticsReport()
rstudio::diagnosticsReport()
rstudio::diagnosticsReport()
library(cati)
devtools::build_github_devtools()
#### Restart R before continuing ####
install.packages("devtools.zip", repos = NULL)
# Remove the package after installation
unlink("devtools.zip")
devtools::install_github("devtools")
?devtool
?devtools
??devtools
??devtool
install_github("hadley/devtools")
library(cati)
library(cati)
library(cati)
library(cati)
